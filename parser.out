Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    COMMENT
    CONTINUE
    DEFAULT
    DIV
    EXIT
    FILE
    FORWARD
    IN
    LABEL
    NIL
    PACKED
    READLN
    SET
    SIZEOF
    SYM_AT
    SYM_CARET
    WITH
    XOR

Grammar

Rule 0     S' -> program
Rule 1     program -> program_head routine SYM_DOT
Rule 2     program_head -> PROGRAM ID SYM_SEMICOLON
Rule 3     routine -> routine_head routine_body
Rule 4     sub_routine -> routine_head routine_body
Rule 5     routine_head -> label_part const_part type_part var_part routine_part
Rule 6     label_part -> epsilon
Rule 7     const_part -> CONST const_expr_list
Rule 8     const_part -> epsilon
Rule 9     const_expr_list -> const_expr_list ID SYM_EQ const_value SYM_SEMICOLON
Rule 10    const_expr_list -> ID SYM_EQ const_value SYM_SEMICOLON
Rule 11    const_expr_list -> const_expr_list ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON
Rule 12    const_expr_list -> ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON
Rule 13    const_value -> INT
Rule 14    const_value -> REAL
Rule 15    const_value -> CHAR
Rule 16    const_value -> STR
Rule 17    const_value -> SYS_CONST
Rule 18    type_part -> TYPE type_decl_list
Rule 19    type_part -> epsilon
Rule 20    type_decl_list -> type_decl_list type_def
Rule 21    type_decl_list -> type_def
Rule 22    type_def -> ID SYM_EQ type_decl SYM_SEMICOLON
Rule 23    type_decl -> simple_type_decl
Rule 24    type_decl -> array_type_decl
Rule 25    type_decl -> record_type_decl
Rule 26    simple_type_decl -> SYS_TYPE
Rule 27    simple_type_decl -> ID
Rule 28    simple_type_decl -> SYM_LPAREN name_list SYM_RPAREN
Rule 29    simple_type_decl -> const_value SYM_RANGE const_value
Rule 30    simple_type_decl -> SYM_SUB const_value SYM_RANGE const_value
Rule 31    simple_type_decl -> SYM_SUB const_value SYM_RANGE SYM_SUB const_value
Rule 32    simple_type_decl -> ID SYM_RANGE ID
Rule 33    array_type_decl -> ARRAY SYM_LBRAC simple_type_decl SYM_RBRAC OF type_decl
Rule 34    record_type_decl -> RECORD field_decl_list END
Rule 35    field_decl_list -> field_decl_list field_decl
Rule 36    field_decl_list -> field_decl
Rule 37    field_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON
Rule 38    name_list -> name_list SYM_COMMA ID
Rule 39    name_list -> ID
Rule 40    var_part -> VAR var_decl_list
Rule 41    var_part -> epsilon
Rule 42    var_decl_list -> var_decl_list var_decl
Rule 43    var_decl_list -> var_decl
Rule 44    var_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON
Rule 45    routine_part -> routine_part func_decl
Rule 46    routine_part -> routine_part procedure_decl
Rule 47    routine_part -> func_decl
Rule 48    routine_part -> procedure_decl
Rule 49    routine_part -> epsilon
Rule 50    func_decl -> func_head SYM_SEMICOLON sub_routine SYM_SEMICOLON
Rule 51    func_head -> FUNCTION ID parameters SYM_COLON simple_type_decl
Rule 52    procedure_decl -> procedure_head SYM_SEMICOLON sub_routine SYM_SEMICOLON
Rule 53    procedure_head -> PROCEDURE ID parameters
Rule 54    parameters -> SYM_LPAREN para_decl_list SYM_RPAREN
Rule 55    parameters -> epsilon
Rule 56    para_decl_list -> para_decl_list SYM_SEMICOLON para_type_list
Rule 57    para_decl_list -> para_type_list
Rule 58    para_type_list -> var_para_list SYM_COLON simple_type_decl
Rule 59    para_type_list -> val_para_list SYM_COLON simple_type_decl
Rule 60    var_para_list -> VAR name_list
Rule 61    val_para_list -> name_list
Rule 62    routine_body -> compound_stmt
Rule 63    compound_stmt -> BEGIN stmt_list END
Rule 64    stmt_list -> stmt_list stmt SYM_SEMICOLON
Rule 65    stmt_list -> epsilon
Rule 66    stmt -> INT SYM_COLON unlabelled_stmt
Rule 67    stmt -> unlabelled_stmt
Rule 68    unlabelled_stmt -> assign_stmt
Rule 69    unlabelled_stmt -> proc_stmt
Rule 70    unlabelled_stmt -> compound_stmt
Rule 71    unlabelled_stmt -> if_stmt
Rule 72    unlabelled_stmt -> repeat_stmt
Rule 73    unlabelled_stmt -> while_stmt
Rule 74    unlabelled_stmt -> for_stmt
Rule 75    unlabelled_stmt -> case_stmt
Rule 76    unlabelled_stmt -> goto_stmt
Rule 77    assign_stmt -> ID SYM_ASSIGN expression
Rule 78    assign_stmt -> ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
Rule 79    assign_stmt -> ID SYM_DOT ID SYM_ASSIGN expression
Rule 80    proc_stmt -> ID
Rule 81    proc_stmt -> ID SYM_LPAREN args_list SYM_RPAREN
Rule 82    proc_stmt -> SYS_PROC
Rule 83    proc_stmt -> SYS_PROC SYM_LPAREN expression_list SYM_RPAREN
Rule 84    proc_stmt -> READ SYM_LPAREN factor SYM_RPAREN
Rule 85    if_stmt -> IF expression THEN stmt else_clause
Rule 86    else_clause -> ELSE stmt
Rule 87    else_clause -> epsilon
Rule 88    repeat_stmt -> REPEAT stmt_list UNTIL expression
Rule 89    while_stmt -> WHILE expression DO stmt
Rule 90    for_stmt -> FOR ID SYM_ASSIGN expression direction expression DO stmt
Rule 91    direction -> TO
Rule 92    direction -> DOWNTO
Rule 93    case_stmt -> CASE expression OF case_expr_list END
Rule 94    case_expr_list -> case_expr_list case_expr
Rule 95    case_expr_list -> case_expr
Rule 96    case_expr -> const_value SYM_COLON stmt SYM_SEMICOLON
Rule 97    case_expr -> ID SYM_COLON stmt SYM_SEMICOLON
Rule 98    goto_stmt -> GOTO INT
Rule 99    expression_list -> expression_list SYM_COMMA expression
Rule 100   expression_list -> expression
Rule 101   expression -> expression SYM_GE expr
Rule 102   expression -> expression SYM_GT expr
Rule 103   expression -> expression SYM_LE expr
Rule 104   expression -> expression SYM_LT expr
Rule 105   expression -> expression SYM_EQ expr
Rule 106   expression -> expression SYM_NE expr
Rule 107   expression -> expr
Rule 108   expr -> expr SYM_ADD term
Rule 109   expr -> expr SYM_SUB term
Rule 110   expr -> expr OR term
Rule 111   expr -> term
Rule 112   term -> term SYM_MUL factor
Rule 113   term -> term SYM_DIV factor
Rule 114   term -> term MOD factor
Rule 115   term -> term AND factor
Rule 116   term -> factor
Rule 117   factor -> ID
Rule 118   factor -> ID SYM_LPAREN args_list SYM_RPAREN
Rule 119   factor -> SYS_FUNCT
Rule 120   factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
Rule 121   factor -> const_value
Rule 122   factor -> SYM_LPAREN expression SYM_RPAREN
Rule 123   factor -> NOT factor
Rule 124   factor -> SYM_SUB factor
Rule 125   factor -> ID SYM_LBRAC expression SYM_RBRAC
Rule 126   factor -> ID SYM_DOT ID
Rule 127   args_list -> args_list SYM_COMMA expression
Rule 128   args_list -> expression
Rule 129   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 115
ARRAY                : 33
BEGIN                : 63
BREAK                : 
CASE                 : 93
CHAR                 : 15
COMMENT              : 
CONST                : 7
CONTINUE             : 
DEFAULT              : 
DIV                  : 
DO                   : 89 90
DOWNTO               : 92
ELSE                 : 86
END                  : 34 63 93
EXIT                 : 
FILE                 : 
FOR                  : 90
FORWARD              : 
FUNCTION             : 51
GOTO                 : 98
ID                   : 2 9 10 11 12 22 27 32 32 38 39 51 53 77 78 79 79 80 81 90 97 117 118 125 126 126
IF                   : 85
IN                   : 
INT                  : 13 66 98
LABEL                : 
MOD                  : 114
NIL                  : 
NOT                  : 123
OF                   : 33 93
OR                   : 110
PACKED               : 
PROCEDURE            : 53
PROGRAM              : 2
READ                 : 84
READLN               : 
REAL                 : 14
RECORD               : 34
REPEAT               : 88
SET                  : 
SIZEOF               : 
STR                  : 16
SYM_ADD              : 108
SYM_ASSIGN           : 77 78 79 90
SYM_AT               : 
SYM_CARET            : 
SYM_COLON            : 37 44 51 58 59 66 96 97
SYM_COMMA            : 38 99 127
SYM_DIV              : 113
SYM_DOT              : 1 79 126
SYM_EQ               : 9 10 11 12 22 105
SYM_GE               : 101
SYM_GT               : 102
SYM_LBRAC            : 33 78 125
SYM_LE               : 103
SYM_LPAREN           : 28 54 81 83 84 118 120 122
SYM_LT               : 104
SYM_MUL              : 112
SYM_NE               : 106
SYM_RANGE            : 29 30 31 32
SYM_RBRAC            : 33 78 125
SYM_RPAREN           : 28 54 81 83 84 118 120 122
SYM_SEMICOLON        : 2 9 10 11 12 22 37 44 50 50 52 52 56 64 96 97
SYM_SUB              : 11 12 30 31 31 109 124
SYS_CONST            : 17
SYS_FUNCT            : 119 120
SYS_PROC             : 82 83
SYS_TYPE             : 26
THEN                 : 85
TO                   : 91
TYPE                 : 18
UNTIL                : 88
VAR                  : 40 60
WHILE                : 89
WITH                 : 
XOR                  : 
error                : 

Nonterminals, with rules where they appear

args_list            : 81 118 120 127
array_type_decl      : 24
assign_stmt          : 68
case_expr            : 94 95
case_expr_list       : 93 94
case_stmt            : 75
compound_stmt        : 62 70
const_expr_list      : 7 9 11
const_part           : 5
const_value          : 9 10 11 12 29 29 30 30 31 31 96 121
direction            : 90
else_clause          : 85
epsilon              : 6 8 19 41 49 55 65 87
expr                 : 101 102 103 104 105 106 107 108 109 110
expression           : 77 78 78 79 85 88 89 90 90 93 99 100 101 102 103 104 105 106 122 125 127 128
expression_list      : 83 99
factor               : 84 112 113 114 115 116 123 124
field_decl           : 35 36
field_decl_list      : 34 35
for_stmt             : 74
func_decl            : 45 47
func_head            : 50
goto_stmt            : 76
if_stmt              : 71
label_part           : 5
name_list            : 28 37 38 44 60 61
para_decl_list       : 54 56
para_type_list       : 56 57
parameters           : 51 53
proc_stmt            : 69
procedure_decl       : 46 48
procedure_head       : 52
program              : 0
program_head         : 1
record_type_decl     : 25
repeat_stmt          : 72
routine              : 1
routine_body         : 3 4
routine_head         : 3 4
routine_part         : 5 45 46
simple_type_decl     : 23 33 51 58 59
stmt                 : 64 85 86 89 90 96 97
stmt_list            : 63 64 88
sub_routine          : 50 52
term                 : 108 109 110 111 112 113 114 115
type_decl            : 22 33 37 44
type_decl_list       : 18 20
type_def             : 20 21
type_part            : 5
unlabelled_stmt      : 66 67
val_para_list        : 59
var_decl             : 42 43
var_decl_list        : 40 42
var_para_list        : 58
var_part             : 5
while_stmt           : 73

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . program_head routine SYM_DOT
    (2) program_head -> . PROGRAM ID SYM_SEMICOLON

    PROGRAM         shift and go to state 3

    program                        shift and go to state 1
    program_head                   shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> program_head . routine SYM_DOT
    (3) routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . epsilon
    (129) epsilon -> .

    CONST           reduce using rule 129 (epsilon -> .)
    TYPE            reduce using rule 129 (epsilon -> .)
    VAR             reduce using rule 129 (epsilon -> .)
    FUNCTION        reduce using rule 129 (epsilon -> .)
    PROCEDURE       reduce using rule 129 (epsilon -> .)
    BEGIN           reduce using rule 129 (epsilon -> .)

    routine                        shift and go to state 4
    routine_head                   shift and go to state 5
    label_part                     shift and go to state 6
    epsilon                        shift and go to state 7

state 3

    (2) program_head -> PROGRAM . ID SYM_SEMICOLON

    ID              shift and go to state 8


state 4

    (1) program -> program_head routine . SYM_DOT

    SYM_DOT         shift and go to state 9


state 5

    (3) routine -> routine_head . routine_body
    (62) routine_body -> . compound_stmt
    (63) compound_stmt -> . BEGIN stmt_list END

    BEGIN           shift and go to state 12

    routine_body                   shift and go to state 10
    compound_stmt                  shift and go to state 11

state 6

    (5) routine_head -> label_part . const_part type_part var_part routine_part
    (7) const_part -> . CONST const_expr_list
    (8) const_part -> . epsilon
    (129) epsilon -> .

    CONST           shift and go to state 14
    TYPE            reduce using rule 129 (epsilon -> .)
    VAR             reduce using rule 129 (epsilon -> .)
    FUNCTION        reduce using rule 129 (epsilon -> .)
    PROCEDURE       reduce using rule 129 (epsilon -> .)
    BEGIN           reduce using rule 129 (epsilon -> .)

    const_part                     shift and go to state 13
    epsilon                        shift and go to state 15

state 7

    (6) label_part -> epsilon .

    CONST           reduce using rule 6 (label_part -> epsilon .)
    TYPE            reduce using rule 6 (label_part -> epsilon .)
    VAR             reduce using rule 6 (label_part -> epsilon .)
    FUNCTION        reduce using rule 6 (label_part -> epsilon .)
    PROCEDURE       reduce using rule 6 (label_part -> epsilon .)
    BEGIN           reduce using rule 6 (label_part -> epsilon .)


state 8

    (2) program_head -> PROGRAM ID . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 16


state 9

    (1) program -> program_head routine SYM_DOT .

    $end            reduce using rule 1 (program -> program_head routine SYM_DOT .)


state 10

    (3) routine -> routine_head routine_body .

    SYM_DOT         reduce using rule 3 (routine -> routine_head routine_body .)


state 11

    (62) routine_body -> compound_stmt .

    SYM_DOT         reduce using rule 62 (routine_body -> compound_stmt .)
    SYM_SEMICOLON   reduce using rule 62 (routine_body -> compound_stmt .)


state 12

    (63) compound_stmt -> BEGIN . stmt_list END
    (64) stmt_list -> . stmt_list stmt SYM_SEMICOLON
    (65) stmt_list -> . epsilon
    (129) epsilon -> .

    END             reduce using rule 129 (epsilon -> .)
    INT             reduce using rule 129 (epsilon -> .)
    ID              reduce using rule 129 (epsilon -> .)
    SYS_PROC        reduce using rule 129 (epsilon -> .)
    READ            reduce using rule 129 (epsilon -> .)
    BEGIN           reduce using rule 129 (epsilon -> .)
    IF              reduce using rule 129 (epsilon -> .)
    REPEAT          reduce using rule 129 (epsilon -> .)
    WHILE           reduce using rule 129 (epsilon -> .)
    FOR             reduce using rule 129 (epsilon -> .)
    CASE            reduce using rule 129 (epsilon -> .)
    GOTO            reduce using rule 129 (epsilon -> .)

    stmt_list                      shift and go to state 17
    epsilon                        shift and go to state 18

state 13

    (5) routine_head -> label_part const_part . type_part var_part routine_part
    (18) type_part -> . TYPE type_decl_list
    (19) type_part -> . epsilon
    (129) epsilon -> .

    TYPE            shift and go to state 20
    VAR             reduce using rule 129 (epsilon -> .)
    FUNCTION        reduce using rule 129 (epsilon -> .)
    PROCEDURE       reduce using rule 129 (epsilon -> .)
    BEGIN           reduce using rule 129 (epsilon -> .)

    type_part                      shift and go to state 19
    epsilon                        shift and go to state 21

state 14

    (7) const_part -> CONST . const_expr_list
    (9) const_expr_list -> . const_expr_list ID SYM_EQ const_value SYM_SEMICOLON
    (10) const_expr_list -> . ID SYM_EQ const_value SYM_SEMICOLON
    (11) const_expr_list -> . const_expr_list ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON
    (12) const_expr_list -> . ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON

    ID              shift and go to state 23

    const_expr_list                shift and go to state 22

state 15

    (8) const_part -> epsilon .

    TYPE            reduce using rule 8 (const_part -> epsilon .)
    VAR             reduce using rule 8 (const_part -> epsilon .)
    FUNCTION        reduce using rule 8 (const_part -> epsilon .)
    PROCEDURE       reduce using rule 8 (const_part -> epsilon .)
    BEGIN           reduce using rule 8 (const_part -> epsilon .)


state 16

    (2) program_head -> PROGRAM ID SYM_SEMICOLON .

    BEGIN           reduce using rule 2 (program_head -> PROGRAM ID SYM_SEMICOLON .)
    CONST           reduce using rule 2 (program_head -> PROGRAM ID SYM_SEMICOLON .)
    TYPE            reduce using rule 2 (program_head -> PROGRAM ID SYM_SEMICOLON .)
    VAR             reduce using rule 2 (program_head -> PROGRAM ID SYM_SEMICOLON .)
    FUNCTION        reduce using rule 2 (program_head -> PROGRAM ID SYM_SEMICOLON .)
    PROCEDURE       reduce using rule 2 (program_head -> PROGRAM ID SYM_SEMICOLON .)


state 17

    (63) compound_stmt -> BEGIN stmt_list . END
    (64) stmt_list -> stmt_list . stmt SYM_SEMICOLON
    (66) stmt -> . INT SYM_COLON unlabelled_stmt
    (67) stmt -> . unlabelled_stmt
    (68) unlabelled_stmt -> . assign_stmt
    (69) unlabelled_stmt -> . proc_stmt
    (70) unlabelled_stmt -> . compound_stmt
    (71) unlabelled_stmt -> . if_stmt
    (72) unlabelled_stmt -> . repeat_stmt
    (73) unlabelled_stmt -> . while_stmt
    (74) unlabelled_stmt -> . for_stmt
    (75) unlabelled_stmt -> . case_stmt
    (76) unlabelled_stmt -> . goto_stmt
    (77) assign_stmt -> . ID SYM_ASSIGN expression
    (78) assign_stmt -> . ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
    (79) assign_stmt -> . ID SYM_DOT ID SYM_ASSIGN expression
    (80) proc_stmt -> . ID
    (81) proc_stmt -> . ID SYM_LPAREN args_list SYM_RPAREN
    (82) proc_stmt -> . SYS_PROC
    (83) proc_stmt -> . SYS_PROC SYM_LPAREN expression_list SYM_RPAREN
    (84) proc_stmt -> . READ SYM_LPAREN factor SYM_RPAREN
    (63) compound_stmt -> . BEGIN stmt_list END
    (85) if_stmt -> . IF expression THEN stmt else_clause
    (88) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (89) while_stmt -> . WHILE expression DO stmt
    (90) for_stmt -> . FOR ID SYM_ASSIGN expression direction expression DO stmt
    (93) case_stmt -> . CASE expression OF case_expr_list END
    (98) goto_stmt -> . GOTO INT

    END             shift and go to state 24
    INT             shift and go to state 26
    ID              shift and go to state 37
    SYS_PROC        shift and go to state 38
    READ            shift and go to state 39
    BEGIN           shift and go to state 12
    IF              shift and go to state 40
    REPEAT          shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CASE            shift and go to state 44
    GOTO            shift and go to state 45

    stmt                           shift and go to state 25
    unlabelled_stmt                shift and go to state 27
    assign_stmt                    shift and go to state 28
    proc_stmt                      shift and go to state 29
    compound_stmt                  shift and go to state 30
    if_stmt                        shift and go to state 31
    repeat_stmt                    shift and go to state 32
    while_stmt                     shift and go to state 33
    for_stmt                       shift and go to state 34
    case_stmt                      shift and go to state 35
    goto_stmt                      shift and go to state 36

state 18

    (65) stmt_list -> epsilon .

    END             reduce using rule 65 (stmt_list -> epsilon .)
    INT             reduce using rule 65 (stmt_list -> epsilon .)
    ID              reduce using rule 65 (stmt_list -> epsilon .)
    SYS_PROC        reduce using rule 65 (stmt_list -> epsilon .)
    READ            reduce using rule 65 (stmt_list -> epsilon .)
    BEGIN           reduce using rule 65 (stmt_list -> epsilon .)
    IF              reduce using rule 65 (stmt_list -> epsilon .)
    REPEAT          reduce using rule 65 (stmt_list -> epsilon .)
    WHILE           reduce using rule 65 (stmt_list -> epsilon .)
    FOR             reduce using rule 65 (stmt_list -> epsilon .)
    CASE            reduce using rule 65 (stmt_list -> epsilon .)
    GOTO            reduce using rule 65 (stmt_list -> epsilon .)
    UNTIL           reduce using rule 65 (stmt_list -> epsilon .)


state 19

    (5) routine_head -> label_part const_part type_part . var_part routine_part
    (40) var_part -> . VAR var_decl_list
    (41) var_part -> . epsilon
    (129) epsilon -> .

    VAR             shift and go to state 47
    FUNCTION        reduce using rule 129 (epsilon -> .)
    PROCEDURE       reduce using rule 129 (epsilon -> .)
    BEGIN           reduce using rule 129 (epsilon -> .)

    var_part                       shift and go to state 46
    epsilon                        shift and go to state 48

state 20

    (18) type_part -> TYPE . type_decl_list
    (20) type_decl_list -> . type_decl_list type_def
    (21) type_decl_list -> . type_def
    (22) type_def -> . ID SYM_EQ type_decl SYM_SEMICOLON

    ID              shift and go to state 51

    type_decl_list                 shift and go to state 49
    type_def                       shift and go to state 50

state 21

    (19) type_part -> epsilon .

    VAR             reduce using rule 19 (type_part -> epsilon .)
    FUNCTION        reduce using rule 19 (type_part -> epsilon .)
    PROCEDURE       reduce using rule 19 (type_part -> epsilon .)
    BEGIN           reduce using rule 19 (type_part -> epsilon .)


state 22

    (7) const_part -> CONST const_expr_list .
    (9) const_expr_list -> const_expr_list . ID SYM_EQ const_value SYM_SEMICOLON
    (11) const_expr_list -> const_expr_list . ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON

    TYPE            reduce using rule 7 (const_part -> CONST const_expr_list .)
    VAR             reduce using rule 7 (const_part -> CONST const_expr_list .)
    FUNCTION        reduce using rule 7 (const_part -> CONST const_expr_list .)
    PROCEDURE       reduce using rule 7 (const_part -> CONST const_expr_list .)
    BEGIN           reduce using rule 7 (const_part -> CONST const_expr_list .)
    ID              shift and go to state 52


state 23

    (10) const_expr_list -> ID . SYM_EQ const_value SYM_SEMICOLON
    (12) const_expr_list -> ID . SYM_EQ SYM_SUB const_value SYM_SEMICOLON

    SYM_EQ          shift and go to state 53


state 24

    (63) compound_stmt -> BEGIN stmt_list END .

    SYM_DOT         reduce using rule 63 (compound_stmt -> BEGIN stmt_list END .)
    SYM_SEMICOLON   reduce using rule 63 (compound_stmt -> BEGIN stmt_list END .)
    ELSE            reduce using rule 63 (compound_stmt -> BEGIN stmt_list END .)


state 25

    (64) stmt_list -> stmt_list stmt . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 54


state 26

    (66) stmt -> INT . SYM_COLON unlabelled_stmt

    SYM_COLON       shift and go to state 55


state 27

    (67) stmt -> unlabelled_stmt .

    SYM_SEMICOLON   reduce using rule 67 (stmt -> unlabelled_stmt .)
    ELSE            reduce using rule 67 (stmt -> unlabelled_stmt .)


state 28

    (68) unlabelled_stmt -> assign_stmt .

    SYM_SEMICOLON   reduce using rule 68 (unlabelled_stmt -> assign_stmt .)
    ELSE            reduce using rule 68 (unlabelled_stmt -> assign_stmt .)


state 29

    (69) unlabelled_stmt -> proc_stmt .

    SYM_SEMICOLON   reduce using rule 69 (unlabelled_stmt -> proc_stmt .)
    ELSE            reduce using rule 69 (unlabelled_stmt -> proc_stmt .)


state 30

    (70) unlabelled_stmt -> compound_stmt .

    SYM_SEMICOLON   reduce using rule 70 (unlabelled_stmt -> compound_stmt .)
    ELSE            reduce using rule 70 (unlabelled_stmt -> compound_stmt .)


state 31

    (71) unlabelled_stmt -> if_stmt .

    SYM_SEMICOLON   reduce using rule 71 (unlabelled_stmt -> if_stmt .)
    ELSE            reduce using rule 71 (unlabelled_stmt -> if_stmt .)


state 32

    (72) unlabelled_stmt -> repeat_stmt .

    SYM_SEMICOLON   reduce using rule 72 (unlabelled_stmt -> repeat_stmt .)
    ELSE            reduce using rule 72 (unlabelled_stmt -> repeat_stmt .)


state 33

    (73) unlabelled_stmt -> while_stmt .

    SYM_SEMICOLON   reduce using rule 73 (unlabelled_stmt -> while_stmt .)
    ELSE            reduce using rule 73 (unlabelled_stmt -> while_stmt .)


state 34

    (74) unlabelled_stmt -> for_stmt .

    SYM_SEMICOLON   reduce using rule 74 (unlabelled_stmt -> for_stmt .)
    ELSE            reduce using rule 74 (unlabelled_stmt -> for_stmt .)


state 35

    (75) unlabelled_stmt -> case_stmt .

    SYM_SEMICOLON   reduce using rule 75 (unlabelled_stmt -> case_stmt .)
    ELSE            reduce using rule 75 (unlabelled_stmt -> case_stmt .)


state 36

    (76) unlabelled_stmt -> goto_stmt .

    SYM_SEMICOLON   reduce using rule 76 (unlabelled_stmt -> goto_stmt .)
    ELSE            reduce using rule 76 (unlabelled_stmt -> goto_stmt .)


state 37

    (77) assign_stmt -> ID . SYM_ASSIGN expression
    (78) assign_stmt -> ID . SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
    (79) assign_stmt -> ID . SYM_DOT ID SYM_ASSIGN expression
    (80) proc_stmt -> ID .
    (81) proc_stmt -> ID . SYM_LPAREN args_list SYM_RPAREN

    SYM_ASSIGN      shift and go to state 56
    SYM_LBRAC       shift and go to state 57
    SYM_DOT         shift and go to state 58
    SYM_SEMICOLON   reduce using rule 80 (proc_stmt -> ID .)
    ELSE            reduce using rule 80 (proc_stmt -> ID .)
    SYM_LPAREN      shift and go to state 59


state 38

    (82) proc_stmt -> SYS_PROC .
    (83) proc_stmt -> SYS_PROC . SYM_LPAREN expression_list SYM_RPAREN

    SYM_SEMICOLON   reduce using rule 82 (proc_stmt -> SYS_PROC .)
    ELSE            reduce using rule 82 (proc_stmt -> SYS_PROC .)
    SYM_LPAREN      shift and go to state 60


state 39

    (84) proc_stmt -> READ . SYM_LPAREN factor SYM_RPAREN

    SYM_LPAREN      shift and go to state 61


state 40

    (85) if_stmt -> IF . expression THEN stmt else_clause
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 62
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 41

    (88) repeat_stmt -> REPEAT . stmt_list UNTIL expression
    (64) stmt_list -> . stmt_list stmt SYM_SEMICOLON
    (65) stmt_list -> . epsilon
    (129) epsilon -> .

    UNTIL           reduce using rule 129 (epsilon -> .)
    INT             reduce using rule 129 (epsilon -> .)
    ID              reduce using rule 129 (epsilon -> .)
    SYS_PROC        reduce using rule 129 (epsilon -> .)
    READ            reduce using rule 129 (epsilon -> .)
    BEGIN           reduce using rule 129 (epsilon -> .)
    IF              reduce using rule 129 (epsilon -> .)
    REPEAT          reduce using rule 129 (epsilon -> .)
    WHILE           reduce using rule 129 (epsilon -> .)
    FOR             reduce using rule 129 (epsilon -> .)
    CASE            reduce using rule 129 (epsilon -> .)
    GOTO            reduce using rule 129 (epsilon -> .)

    stmt_list                      shift and go to state 77
    epsilon                        shift and go to state 18

state 42

    (89) while_stmt -> WHILE . expression DO stmt
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 78
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 43

    (90) for_stmt -> FOR . ID SYM_ASSIGN expression direction expression DO stmt

    ID              shift and go to state 79


state 44

    (93) case_stmt -> CASE . expression OF case_expr_list END
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 80
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 45

    (98) goto_stmt -> GOTO . INT

    INT             shift and go to state 81


state 46

    (5) routine_head -> label_part const_part type_part var_part . routine_part
    (45) routine_part -> . routine_part func_decl
    (46) routine_part -> . routine_part procedure_decl
    (47) routine_part -> . func_decl
    (48) routine_part -> . procedure_decl
    (49) routine_part -> . epsilon
    (50) func_decl -> . func_head SYM_SEMICOLON sub_routine SYM_SEMICOLON
    (52) procedure_decl -> . procedure_head SYM_SEMICOLON sub_routine SYM_SEMICOLON
    (129) epsilon -> .
    (51) func_head -> . FUNCTION ID parameters SYM_COLON simple_type_decl
    (53) procedure_head -> . PROCEDURE ID parameters

  ! shift/reduce conflict for FUNCTION resolved as shift
  ! shift/reduce conflict for PROCEDURE resolved as shift
    BEGIN           reduce using rule 129 (epsilon -> .)
    FUNCTION        shift and go to state 88
    PROCEDURE       shift and go to state 89

  ! FUNCTION        [ reduce using rule 129 (epsilon -> .) ]
  ! PROCEDURE       [ reduce using rule 129 (epsilon -> .) ]

    routine_part                   shift and go to state 82
    func_decl                      shift and go to state 83
    procedure_decl                 shift and go to state 84
    epsilon                        shift and go to state 85
    func_head                      shift and go to state 86
    procedure_head                 shift and go to state 87

state 47

    (40) var_part -> VAR . var_decl_list
    (42) var_decl_list -> . var_decl_list var_decl
    (43) var_decl_list -> . var_decl
    (44) var_decl -> . name_list SYM_COLON type_decl SYM_SEMICOLON
    (38) name_list -> . name_list SYM_COMMA ID
    (39) name_list -> . ID

    ID              shift and go to state 93

    var_decl_list                  shift and go to state 90
    var_decl                       shift and go to state 91
    name_list                      shift and go to state 92

state 48

    (41) var_part -> epsilon .

    FUNCTION        reduce using rule 41 (var_part -> epsilon .)
    PROCEDURE       reduce using rule 41 (var_part -> epsilon .)
    BEGIN           reduce using rule 41 (var_part -> epsilon .)


state 49

    (18) type_part -> TYPE type_decl_list .
    (20) type_decl_list -> type_decl_list . type_def
    (22) type_def -> . ID SYM_EQ type_decl SYM_SEMICOLON

    VAR             reduce using rule 18 (type_part -> TYPE type_decl_list .)
    FUNCTION        reduce using rule 18 (type_part -> TYPE type_decl_list .)
    PROCEDURE       reduce using rule 18 (type_part -> TYPE type_decl_list .)
    BEGIN           reduce using rule 18 (type_part -> TYPE type_decl_list .)
    ID              shift and go to state 51

    type_def                       shift and go to state 94

state 50

    (21) type_decl_list -> type_def .

    ID              reduce using rule 21 (type_decl_list -> type_def .)
    VAR             reduce using rule 21 (type_decl_list -> type_def .)
    FUNCTION        reduce using rule 21 (type_decl_list -> type_def .)
    PROCEDURE       reduce using rule 21 (type_decl_list -> type_def .)
    BEGIN           reduce using rule 21 (type_decl_list -> type_def .)


state 51

    (22) type_def -> ID . SYM_EQ type_decl SYM_SEMICOLON

    SYM_EQ          shift and go to state 95


state 52

    (9) const_expr_list -> const_expr_list ID . SYM_EQ const_value SYM_SEMICOLON
    (11) const_expr_list -> const_expr_list ID . SYM_EQ SYM_SUB const_value SYM_SEMICOLON

    SYM_EQ          shift and go to state 96


state 53

    (10) const_expr_list -> ID SYM_EQ . const_value SYM_SEMICOLON
    (12) const_expr_list -> ID SYM_EQ . SYM_SUB const_value SYM_SEMICOLON
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYM_SUB         shift and go to state 98
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    const_value                    shift and go to state 97

state 54

    (64) stmt_list -> stmt_list stmt SYM_SEMICOLON .

    END             reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    INT             reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    ID              reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    SYS_PROC        reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    READ            reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    BEGIN           reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    IF              reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    REPEAT          reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    WHILE           reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    FOR             reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    CASE            reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    GOTO            reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)
    UNTIL           reduce using rule 64 (stmt_list -> stmt_list stmt SYM_SEMICOLON .)


state 55

    (66) stmt -> INT SYM_COLON . unlabelled_stmt
    (68) unlabelled_stmt -> . assign_stmt
    (69) unlabelled_stmt -> . proc_stmt
    (70) unlabelled_stmt -> . compound_stmt
    (71) unlabelled_stmt -> . if_stmt
    (72) unlabelled_stmt -> . repeat_stmt
    (73) unlabelled_stmt -> . while_stmt
    (74) unlabelled_stmt -> . for_stmt
    (75) unlabelled_stmt -> . case_stmt
    (76) unlabelled_stmt -> . goto_stmt
    (77) assign_stmt -> . ID SYM_ASSIGN expression
    (78) assign_stmt -> . ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
    (79) assign_stmt -> . ID SYM_DOT ID SYM_ASSIGN expression
    (80) proc_stmt -> . ID
    (81) proc_stmt -> . ID SYM_LPAREN args_list SYM_RPAREN
    (82) proc_stmt -> . SYS_PROC
    (83) proc_stmt -> . SYS_PROC SYM_LPAREN expression_list SYM_RPAREN
    (84) proc_stmt -> . READ SYM_LPAREN factor SYM_RPAREN
    (63) compound_stmt -> . BEGIN stmt_list END
    (85) if_stmt -> . IF expression THEN stmt else_clause
    (88) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (89) while_stmt -> . WHILE expression DO stmt
    (90) for_stmt -> . FOR ID SYM_ASSIGN expression direction expression DO stmt
    (93) case_stmt -> . CASE expression OF case_expr_list END
    (98) goto_stmt -> . GOTO INT

    ID              shift and go to state 37
    SYS_PROC        shift and go to state 38
    READ            shift and go to state 39
    BEGIN           shift and go to state 12
    IF              shift and go to state 40
    REPEAT          shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CASE            shift and go to state 44
    GOTO            shift and go to state 45

    unlabelled_stmt                shift and go to state 99
    assign_stmt                    shift and go to state 28
    proc_stmt                      shift and go to state 29
    compound_stmt                  shift and go to state 30
    if_stmt                        shift and go to state 31
    repeat_stmt                    shift and go to state 32
    while_stmt                     shift and go to state 33
    for_stmt                       shift and go to state 34
    case_stmt                      shift and go to state 35
    goto_stmt                      shift and go to state 36

state 56

    (77) assign_stmt -> ID SYM_ASSIGN . expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 100
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 57

    (78) assign_stmt -> ID SYM_LBRAC . expression SYM_RBRAC SYM_ASSIGN expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 101
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 58

    (79) assign_stmt -> ID SYM_DOT . ID SYM_ASSIGN expression

    ID              shift and go to state 102


state 59

    (81) proc_stmt -> ID SYM_LPAREN . args_list SYM_RPAREN
    (127) args_list -> . args_list SYM_COMMA expression
    (128) args_list -> . expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    args_list                      shift and go to state 103
    expression                     shift and go to state 104
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 60

    (83) proc_stmt -> SYS_PROC SYM_LPAREN . expression_list SYM_RPAREN
    (99) expression_list -> . expression_list SYM_COMMA expression
    (100) expression_list -> . expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression_list                shift and go to state 105
    expression                     shift and go to state 106
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 61

    (84) proc_stmt -> READ SYM_LPAREN . factor SYM_RPAREN
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    factor                         shift and go to state 107
    const_value                    shift and go to state 70

state 62

    (85) if_stmt -> IF expression . THEN stmt else_clause
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    THEN            shift and go to state 108
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 63

    (107) expression -> expr .
    (108) expr -> expr . SYM_ADD term
    (109) expr -> expr . SYM_SUB term
    (110) expr -> expr . OR term

    THEN            reduce using rule 107 (expression -> expr .)
    SYM_GE          reduce using rule 107 (expression -> expr .)
    SYM_GT          reduce using rule 107 (expression -> expr .)
    SYM_LE          reduce using rule 107 (expression -> expr .)
    SYM_LT          reduce using rule 107 (expression -> expr .)
    SYM_EQ          reduce using rule 107 (expression -> expr .)
    SYM_NE          reduce using rule 107 (expression -> expr .)
    DO              reduce using rule 107 (expression -> expr .)
    OF              reduce using rule 107 (expression -> expr .)
    SYM_SEMICOLON   reduce using rule 107 (expression -> expr .)
    ELSE            reduce using rule 107 (expression -> expr .)
    SYM_RBRAC       reduce using rule 107 (expression -> expr .)
    SYM_RPAREN      reduce using rule 107 (expression -> expr .)
    SYM_COMMA       reduce using rule 107 (expression -> expr .)
    TO              reduce using rule 107 (expression -> expr .)
    DOWNTO          reduce using rule 107 (expression -> expr .)
    SYM_ADD         shift and go to state 115
    SYM_SUB         shift and go to state 116
    OR              shift and go to state 117


state 64

    (111) expr -> term .
    (112) term -> term . SYM_MUL factor
    (113) term -> term . SYM_DIV factor
    (114) term -> term . MOD factor
    (115) term -> term . AND factor

    SYM_ADD         reduce using rule 111 (expr -> term .)
    SYM_SUB         reduce using rule 111 (expr -> term .)
    OR              reduce using rule 111 (expr -> term .)
    THEN            reduce using rule 111 (expr -> term .)
    SYM_GE          reduce using rule 111 (expr -> term .)
    SYM_GT          reduce using rule 111 (expr -> term .)
    SYM_LE          reduce using rule 111 (expr -> term .)
    SYM_LT          reduce using rule 111 (expr -> term .)
    SYM_EQ          reduce using rule 111 (expr -> term .)
    SYM_NE          reduce using rule 111 (expr -> term .)
    DO              reduce using rule 111 (expr -> term .)
    OF              reduce using rule 111 (expr -> term .)
    SYM_SEMICOLON   reduce using rule 111 (expr -> term .)
    ELSE            reduce using rule 111 (expr -> term .)
    SYM_RBRAC       reduce using rule 111 (expr -> term .)
    SYM_RPAREN      reduce using rule 111 (expr -> term .)
    SYM_COMMA       reduce using rule 111 (expr -> term .)
    TO              reduce using rule 111 (expr -> term .)
    DOWNTO          reduce using rule 111 (expr -> term .)
    SYM_MUL         shift and go to state 118
    SYM_DIV         shift and go to state 119
    MOD             shift and go to state 120
    AND             shift and go to state 121


state 65

    (124) factor -> SYM_SUB . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    factor                         shift and go to state 122
    const_value                    shift and go to state 70

state 66

    (116) term -> factor .

    SYM_MUL         reduce using rule 116 (term -> factor .)
    SYM_DIV         reduce using rule 116 (term -> factor .)
    MOD             reduce using rule 116 (term -> factor .)
    AND             reduce using rule 116 (term -> factor .)
    SYM_ADD         reduce using rule 116 (term -> factor .)
    SYM_SUB         reduce using rule 116 (term -> factor .)
    OR              reduce using rule 116 (term -> factor .)
    THEN            reduce using rule 116 (term -> factor .)
    SYM_GE          reduce using rule 116 (term -> factor .)
    SYM_GT          reduce using rule 116 (term -> factor .)
    SYM_LE          reduce using rule 116 (term -> factor .)
    SYM_LT          reduce using rule 116 (term -> factor .)
    SYM_EQ          reduce using rule 116 (term -> factor .)
    SYM_NE          reduce using rule 116 (term -> factor .)
    DO              reduce using rule 116 (term -> factor .)
    OF              reduce using rule 116 (term -> factor .)
    SYM_SEMICOLON   reduce using rule 116 (term -> factor .)
    ELSE            reduce using rule 116 (term -> factor .)
    SYM_RBRAC       reduce using rule 116 (term -> factor .)
    SYM_RPAREN      reduce using rule 116 (term -> factor .)
    SYM_COMMA       reduce using rule 116 (term -> factor .)
    TO              reduce using rule 116 (term -> factor .)
    DOWNTO          reduce using rule 116 (term -> factor .)


state 67

    (117) factor -> ID .
    (118) factor -> ID . SYM_LPAREN args_list SYM_RPAREN
    (125) factor -> ID . SYM_LBRAC expression SYM_RBRAC
    (126) factor -> ID . SYM_DOT ID

    SYM_MUL         reduce using rule 117 (factor -> ID .)
    SYM_DIV         reduce using rule 117 (factor -> ID .)
    MOD             reduce using rule 117 (factor -> ID .)
    AND             reduce using rule 117 (factor -> ID .)
    SYM_ADD         reduce using rule 117 (factor -> ID .)
    SYM_SUB         reduce using rule 117 (factor -> ID .)
    OR              reduce using rule 117 (factor -> ID .)
    THEN            reduce using rule 117 (factor -> ID .)
    SYM_GE          reduce using rule 117 (factor -> ID .)
    SYM_GT          reduce using rule 117 (factor -> ID .)
    SYM_LE          reduce using rule 117 (factor -> ID .)
    SYM_LT          reduce using rule 117 (factor -> ID .)
    SYM_EQ          reduce using rule 117 (factor -> ID .)
    SYM_NE          reduce using rule 117 (factor -> ID .)
    DO              reduce using rule 117 (factor -> ID .)
    OF              reduce using rule 117 (factor -> ID .)
    SYM_SEMICOLON   reduce using rule 117 (factor -> ID .)
    ELSE            reduce using rule 117 (factor -> ID .)
    SYM_RBRAC       reduce using rule 117 (factor -> ID .)
    SYM_RPAREN      reduce using rule 117 (factor -> ID .)
    SYM_COMMA       reduce using rule 117 (factor -> ID .)
    TO              reduce using rule 117 (factor -> ID .)
    DOWNTO          reduce using rule 117 (factor -> ID .)
    SYM_LPAREN      shift and go to state 123
    SYM_LBRAC       shift and go to state 124
    SYM_DOT         shift and go to state 125


state 68

    (122) factor -> SYM_LPAREN . expression SYM_RPAREN
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 126
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 69

    (119) factor -> SYS_FUNCT .
    (120) factor -> SYS_FUNCT . SYM_LPAREN args_list SYM_RPAREN

    SYM_MUL         reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_DIV         reduce using rule 119 (factor -> SYS_FUNCT .)
    MOD             reduce using rule 119 (factor -> SYS_FUNCT .)
    AND             reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_ADD         reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_SUB         reduce using rule 119 (factor -> SYS_FUNCT .)
    OR              reduce using rule 119 (factor -> SYS_FUNCT .)
    THEN            reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_GE          reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_GT          reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_LE          reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_LT          reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_EQ          reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_NE          reduce using rule 119 (factor -> SYS_FUNCT .)
    DO              reduce using rule 119 (factor -> SYS_FUNCT .)
    OF              reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_SEMICOLON   reduce using rule 119 (factor -> SYS_FUNCT .)
    ELSE            reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_RBRAC       reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_RPAREN      reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_COMMA       reduce using rule 119 (factor -> SYS_FUNCT .)
    TO              reduce using rule 119 (factor -> SYS_FUNCT .)
    DOWNTO          reduce using rule 119 (factor -> SYS_FUNCT .)
    SYM_LPAREN      shift and go to state 127


state 70

    (121) factor -> const_value .

    SYM_MUL         reduce using rule 121 (factor -> const_value .)
    SYM_DIV         reduce using rule 121 (factor -> const_value .)
    MOD             reduce using rule 121 (factor -> const_value .)
    AND             reduce using rule 121 (factor -> const_value .)
    SYM_ADD         reduce using rule 121 (factor -> const_value .)
    SYM_SUB         reduce using rule 121 (factor -> const_value .)
    OR              reduce using rule 121 (factor -> const_value .)
    THEN            reduce using rule 121 (factor -> const_value .)
    SYM_GE          reduce using rule 121 (factor -> const_value .)
    SYM_GT          reduce using rule 121 (factor -> const_value .)
    SYM_LE          reduce using rule 121 (factor -> const_value .)
    SYM_LT          reduce using rule 121 (factor -> const_value .)
    SYM_EQ          reduce using rule 121 (factor -> const_value .)
    SYM_NE          reduce using rule 121 (factor -> const_value .)
    DO              reduce using rule 121 (factor -> const_value .)
    OF              reduce using rule 121 (factor -> const_value .)
    SYM_SEMICOLON   reduce using rule 121 (factor -> const_value .)
    ELSE            reduce using rule 121 (factor -> const_value .)
    SYM_RBRAC       reduce using rule 121 (factor -> const_value .)
    SYM_RPAREN      reduce using rule 121 (factor -> const_value .)
    SYM_COMMA       reduce using rule 121 (factor -> const_value .)
    TO              reduce using rule 121 (factor -> const_value .)
    DOWNTO          reduce using rule 121 (factor -> const_value .)


state 71

    (123) factor -> NOT . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    factor                         shift and go to state 128
    const_value                    shift and go to state 70

state 72

    (13) const_value -> INT .

    SYM_MUL         reduce using rule 13 (const_value -> INT .)
    SYM_DIV         reduce using rule 13 (const_value -> INT .)
    MOD             reduce using rule 13 (const_value -> INT .)
    AND             reduce using rule 13 (const_value -> INT .)
    SYM_ADD         reduce using rule 13 (const_value -> INT .)
    SYM_SUB         reduce using rule 13 (const_value -> INT .)
    OR              reduce using rule 13 (const_value -> INT .)
    THEN            reduce using rule 13 (const_value -> INT .)
    SYM_GE          reduce using rule 13 (const_value -> INT .)
    SYM_GT          reduce using rule 13 (const_value -> INT .)
    SYM_LE          reduce using rule 13 (const_value -> INT .)
    SYM_LT          reduce using rule 13 (const_value -> INT .)
    SYM_EQ          reduce using rule 13 (const_value -> INT .)
    SYM_NE          reduce using rule 13 (const_value -> INT .)
    DO              reduce using rule 13 (const_value -> INT .)
    OF              reduce using rule 13 (const_value -> INT .)
    SYM_SEMICOLON   reduce using rule 13 (const_value -> INT .)
    ELSE            reduce using rule 13 (const_value -> INT .)
    SYM_RBRAC       reduce using rule 13 (const_value -> INT .)
    SYM_RPAREN      reduce using rule 13 (const_value -> INT .)
    SYM_COMMA       reduce using rule 13 (const_value -> INT .)
    TO              reduce using rule 13 (const_value -> INT .)
    DOWNTO          reduce using rule 13 (const_value -> INT .)
    SYM_RANGE       reduce using rule 13 (const_value -> INT .)
    SYM_COLON       reduce using rule 13 (const_value -> INT .)


state 73

    (14) const_value -> REAL .

    SYM_MUL         reduce using rule 14 (const_value -> REAL .)
    SYM_DIV         reduce using rule 14 (const_value -> REAL .)
    MOD             reduce using rule 14 (const_value -> REAL .)
    AND             reduce using rule 14 (const_value -> REAL .)
    SYM_ADD         reduce using rule 14 (const_value -> REAL .)
    SYM_SUB         reduce using rule 14 (const_value -> REAL .)
    OR              reduce using rule 14 (const_value -> REAL .)
    THEN            reduce using rule 14 (const_value -> REAL .)
    SYM_GE          reduce using rule 14 (const_value -> REAL .)
    SYM_GT          reduce using rule 14 (const_value -> REAL .)
    SYM_LE          reduce using rule 14 (const_value -> REAL .)
    SYM_LT          reduce using rule 14 (const_value -> REAL .)
    SYM_EQ          reduce using rule 14 (const_value -> REAL .)
    SYM_NE          reduce using rule 14 (const_value -> REAL .)
    DO              reduce using rule 14 (const_value -> REAL .)
    OF              reduce using rule 14 (const_value -> REAL .)
    SYM_SEMICOLON   reduce using rule 14 (const_value -> REAL .)
    ELSE            reduce using rule 14 (const_value -> REAL .)
    SYM_RBRAC       reduce using rule 14 (const_value -> REAL .)
    SYM_RPAREN      reduce using rule 14 (const_value -> REAL .)
    SYM_COMMA       reduce using rule 14 (const_value -> REAL .)
    TO              reduce using rule 14 (const_value -> REAL .)
    DOWNTO          reduce using rule 14 (const_value -> REAL .)
    SYM_RANGE       reduce using rule 14 (const_value -> REAL .)
    SYM_COLON       reduce using rule 14 (const_value -> REAL .)


state 74

    (15) const_value -> CHAR .

    SYM_MUL         reduce using rule 15 (const_value -> CHAR .)
    SYM_DIV         reduce using rule 15 (const_value -> CHAR .)
    MOD             reduce using rule 15 (const_value -> CHAR .)
    AND             reduce using rule 15 (const_value -> CHAR .)
    SYM_ADD         reduce using rule 15 (const_value -> CHAR .)
    SYM_SUB         reduce using rule 15 (const_value -> CHAR .)
    OR              reduce using rule 15 (const_value -> CHAR .)
    THEN            reduce using rule 15 (const_value -> CHAR .)
    SYM_GE          reduce using rule 15 (const_value -> CHAR .)
    SYM_GT          reduce using rule 15 (const_value -> CHAR .)
    SYM_LE          reduce using rule 15 (const_value -> CHAR .)
    SYM_LT          reduce using rule 15 (const_value -> CHAR .)
    SYM_EQ          reduce using rule 15 (const_value -> CHAR .)
    SYM_NE          reduce using rule 15 (const_value -> CHAR .)
    DO              reduce using rule 15 (const_value -> CHAR .)
    OF              reduce using rule 15 (const_value -> CHAR .)
    SYM_SEMICOLON   reduce using rule 15 (const_value -> CHAR .)
    ELSE            reduce using rule 15 (const_value -> CHAR .)
    SYM_RBRAC       reduce using rule 15 (const_value -> CHAR .)
    SYM_RPAREN      reduce using rule 15 (const_value -> CHAR .)
    SYM_COMMA       reduce using rule 15 (const_value -> CHAR .)
    TO              reduce using rule 15 (const_value -> CHAR .)
    DOWNTO          reduce using rule 15 (const_value -> CHAR .)
    SYM_RANGE       reduce using rule 15 (const_value -> CHAR .)
    SYM_COLON       reduce using rule 15 (const_value -> CHAR .)


state 75

    (16) const_value -> STR .

    SYM_MUL         reduce using rule 16 (const_value -> STR .)
    SYM_DIV         reduce using rule 16 (const_value -> STR .)
    MOD             reduce using rule 16 (const_value -> STR .)
    AND             reduce using rule 16 (const_value -> STR .)
    SYM_ADD         reduce using rule 16 (const_value -> STR .)
    SYM_SUB         reduce using rule 16 (const_value -> STR .)
    OR              reduce using rule 16 (const_value -> STR .)
    THEN            reduce using rule 16 (const_value -> STR .)
    SYM_GE          reduce using rule 16 (const_value -> STR .)
    SYM_GT          reduce using rule 16 (const_value -> STR .)
    SYM_LE          reduce using rule 16 (const_value -> STR .)
    SYM_LT          reduce using rule 16 (const_value -> STR .)
    SYM_EQ          reduce using rule 16 (const_value -> STR .)
    SYM_NE          reduce using rule 16 (const_value -> STR .)
    DO              reduce using rule 16 (const_value -> STR .)
    OF              reduce using rule 16 (const_value -> STR .)
    SYM_SEMICOLON   reduce using rule 16 (const_value -> STR .)
    ELSE            reduce using rule 16 (const_value -> STR .)
    SYM_RBRAC       reduce using rule 16 (const_value -> STR .)
    SYM_RPAREN      reduce using rule 16 (const_value -> STR .)
    SYM_COMMA       reduce using rule 16 (const_value -> STR .)
    TO              reduce using rule 16 (const_value -> STR .)
    DOWNTO          reduce using rule 16 (const_value -> STR .)
    SYM_RANGE       reduce using rule 16 (const_value -> STR .)
    SYM_COLON       reduce using rule 16 (const_value -> STR .)


state 76

    (17) const_value -> SYS_CONST .

    SYM_MUL         reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_DIV         reduce using rule 17 (const_value -> SYS_CONST .)
    MOD             reduce using rule 17 (const_value -> SYS_CONST .)
    AND             reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_ADD         reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_SUB         reduce using rule 17 (const_value -> SYS_CONST .)
    OR              reduce using rule 17 (const_value -> SYS_CONST .)
    THEN            reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_GE          reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_GT          reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_LE          reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_LT          reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_EQ          reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_NE          reduce using rule 17 (const_value -> SYS_CONST .)
    DO              reduce using rule 17 (const_value -> SYS_CONST .)
    OF              reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_SEMICOLON   reduce using rule 17 (const_value -> SYS_CONST .)
    ELSE            reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_RBRAC       reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_RPAREN      reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_COMMA       reduce using rule 17 (const_value -> SYS_CONST .)
    TO              reduce using rule 17 (const_value -> SYS_CONST .)
    DOWNTO          reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_RANGE       reduce using rule 17 (const_value -> SYS_CONST .)
    SYM_COLON       reduce using rule 17 (const_value -> SYS_CONST .)


state 77

    (88) repeat_stmt -> REPEAT stmt_list . UNTIL expression
    (64) stmt_list -> stmt_list . stmt SYM_SEMICOLON
    (66) stmt -> . INT SYM_COLON unlabelled_stmt
    (67) stmt -> . unlabelled_stmt
    (68) unlabelled_stmt -> . assign_stmt
    (69) unlabelled_stmt -> . proc_stmt
    (70) unlabelled_stmt -> . compound_stmt
    (71) unlabelled_stmt -> . if_stmt
    (72) unlabelled_stmt -> . repeat_stmt
    (73) unlabelled_stmt -> . while_stmt
    (74) unlabelled_stmt -> . for_stmt
    (75) unlabelled_stmt -> . case_stmt
    (76) unlabelled_stmt -> . goto_stmt
    (77) assign_stmt -> . ID SYM_ASSIGN expression
    (78) assign_stmt -> . ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
    (79) assign_stmt -> . ID SYM_DOT ID SYM_ASSIGN expression
    (80) proc_stmt -> . ID
    (81) proc_stmt -> . ID SYM_LPAREN args_list SYM_RPAREN
    (82) proc_stmt -> . SYS_PROC
    (83) proc_stmt -> . SYS_PROC SYM_LPAREN expression_list SYM_RPAREN
    (84) proc_stmt -> . READ SYM_LPAREN factor SYM_RPAREN
    (63) compound_stmt -> . BEGIN stmt_list END
    (85) if_stmt -> . IF expression THEN stmt else_clause
    (88) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (89) while_stmt -> . WHILE expression DO stmt
    (90) for_stmt -> . FOR ID SYM_ASSIGN expression direction expression DO stmt
    (93) case_stmt -> . CASE expression OF case_expr_list END
    (98) goto_stmt -> . GOTO INT

    UNTIL           shift and go to state 129
    INT             shift and go to state 26
    ID              shift and go to state 37
    SYS_PROC        shift and go to state 38
    READ            shift and go to state 39
    BEGIN           shift and go to state 12
    IF              shift and go to state 40
    REPEAT          shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CASE            shift and go to state 44
    GOTO            shift and go to state 45

    stmt                           shift and go to state 25
    unlabelled_stmt                shift and go to state 27
    assign_stmt                    shift and go to state 28
    proc_stmt                      shift and go to state 29
    compound_stmt                  shift and go to state 30
    if_stmt                        shift and go to state 31
    repeat_stmt                    shift and go to state 32
    while_stmt                     shift and go to state 33
    for_stmt                       shift and go to state 34
    case_stmt                      shift and go to state 35
    goto_stmt                      shift and go to state 36

state 78

    (89) while_stmt -> WHILE expression . DO stmt
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    DO              shift and go to state 130
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 79

    (90) for_stmt -> FOR ID . SYM_ASSIGN expression direction expression DO stmt

    SYM_ASSIGN      shift and go to state 131


state 80

    (93) case_stmt -> CASE expression . OF case_expr_list END
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    OF              shift and go to state 132
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 81

    (98) goto_stmt -> GOTO INT .

    SYM_SEMICOLON   reduce using rule 98 (goto_stmt -> GOTO INT .)
    ELSE            reduce using rule 98 (goto_stmt -> GOTO INT .)


state 82

    (5) routine_head -> label_part const_part type_part var_part routine_part .
    (45) routine_part -> routine_part . func_decl
    (46) routine_part -> routine_part . procedure_decl
    (50) func_decl -> . func_head SYM_SEMICOLON sub_routine SYM_SEMICOLON
    (52) procedure_decl -> . procedure_head SYM_SEMICOLON sub_routine SYM_SEMICOLON
    (51) func_head -> . FUNCTION ID parameters SYM_COLON simple_type_decl
    (53) procedure_head -> . PROCEDURE ID parameters

    BEGIN           reduce using rule 5 (routine_head -> label_part const_part type_part var_part routine_part .)
    FUNCTION        shift and go to state 88
    PROCEDURE       shift and go to state 89

    func_decl                      shift and go to state 133
    procedure_decl                 shift and go to state 134
    func_head                      shift and go to state 86
    procedure_head                 shift and go to state 87

state 83

    (47) routine_part -> func_decl .

    FUNCTION        reduce using rule 47 (routine_part -> func_decl .)
    PROCEDURE       reduce using rule 47 (routine_part -> func_decl .)
    BEGIN           reduce using rule 47 (routine_part -> func_decl .)


state 84

    (48) routine_part -> procedure_decl .

    FUNCTION        reduce using rule 48 (routine_part -> procedure_decl .)
    PROCEDURE       reduce using rule 48 (routine_part -> procedure_decl .)
    BEGIN           reduce using rule 48 (routine_part -> procedure_decl .)


state 85

    (49) routine_part -> epsilon .

    FUNCTION        reduce using rule 49 (routine_part -> epsilon .)
    PROCEDURE       reduce using rule 49 (routine_part -> epsilon .)
    BEGIN           reduce using rule 49 (routine_part -> epsilon .)


state 86

    (50) func_decl -> func_head . SYM_SEMICOLON sub_routine SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 135


state 87

    (52) procedure_decl -> procedure_head . SYM_SEMICOLON sub_routine SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 136


state 88

    (51) func_head -> FUNCTION . ID parameters SYM_COLON simple_type_decl

    ID              shift and go to state 137


state 89

    (53) procedure_head -> PROCEDURE . ID parameters

    ID              shift and go to state 138


state 90

    (40) var_part -> VAR var_decl_list .
    (42) var_decl_list -> var_decl_list . var_decl
    (44) var_decl -> . name_list SYM_COLON type_decl SYM_SEMICOLON
    (38) name_list -> . name_list SYM_COMMA ID
    (39) name_list -> . ID

    FUNCTION        reduce using rule 40 (var_part -> VAR var_decl_list .)
    PROCEDURE       reduce using rule 40 (var_part -> VAR var_decl_list .)
    BEGIN           reduce using rule 40 (var_part -> VAR var_decl_list .)
    ID              shift and go to state 93

    var_decl                       shift and go to state 139
    name_list                      shift and go to state 92

state 91

    (43) var_decl_list -> var_decl .

    ID              reduce using rule 43 (var_decl_list -> var_decl .)
    FUNCTION        reduce using rule 43 (var_decl_list -> var_decl .)
    PROCEDURE       reduce using rule 43 (var_decl_list -> var_decl .)
    BEGIN           reduce using rule 43 (var_decl_list -> var_decl .)


state 92

    (44) var_decl -> name_list . SYM_COLON type_decl SYM_SEMICOLON
    (38) name_list -> name_list . SYM_COMMA ID

    SYM_COLON       shift and go to state 140
    SYM_COMMA       shift and go to state 141


state 93

    (39) name_list -> ID .

    SYM_COLON       reduce using rule 39 (name_list -> ID .)
    SYM_COMMA       reduce using rule 39 (name_list -> ID .)
    SYM_RPAREN      reduce using rule 39 (name_list -> ID .)


state 94

    (20) type_decl_list -> type_decl_list type_def .

    ID              reduce using rule 20 (type_decl_list -> type_decl_list type_def .)
    VAR             reduce using rule 20 (type_decl_list -> type_decl_list type_def .)
    FUNCTION        reduce using rule 20 (type_decl_list -> type_decl_list type_def .)
    PROCEDURE       reduce using rule 20 (type_decl_list -> type_decl_list type_def .)
    BEGIN           reduce using rule 20 (type_decl_list -> type_decl_list type_def .)


state 95

    (22) type_def -> ID SYM_EQ . type_decl SYM_SEMICOLON
    (23) type_decl -> . simple_type_decl
    (24) type_decl -> . array_type_decl
    (25) type_decl -> . record_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . ID
    (28) simple_type_decl -> . SYM_LPAREN name_list SYM_RPAREN
    (29) simple_type_decl -> . const_value SYM_RANGE const_value
    (30) simple_type_decl -> . SYM_SUB const_value SYM_RANGE const_value
    (31) simple_type_decl -> . SYM_SUB const_value SYM_RANGE SYM_SUB const_value
    (32) simple_type_decl -> . ID SYM_RANGE ID
    (33) array_type_decl -> . ARRAY SYM_LBRAC simple_type_decl SYM_RBRAC OF type_decl
    (34) record_type_decl -> . RECORD field_decl_list END
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYS_TYPE        shift and go to state 147
    ID              shift and go to state 142
    SYM_LPAREN      shift and go to state 148
    SYM_SUB         shift and go to state 150
    ARRAY           shift and go to state 151
    RECORD          shift and go to state 152
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    type_decl                      shift and go to state 143
    simple_type_decl               shift and go to state 144
    array_type_decl                shift and go to state 145
    record_type_decl               shift and go to state 146
    const_value                    shift and go to state 149

state 96

    (9) const_expr_list -> const_expr_list ID SYM_EQ . const_value SYM_SEMICOLON
    (11) const_expr_list -> const_expr_list ID SYM_EQ . SYM_SUB const_value SYM_SEMICOLON
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYM_SUB         shift and go to state 154
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    const_value                    shift and go to state 153

state 97

    (10) const_expr_list -> ID SYM_EQ const_value . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 155


state 98

    (12) const_expr_list -> ID SYM_EQ SYM_SUB . const_value SYM_SEMICOLON
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    const_value                    shift and go to state 156

state 99

    (66) stmt -> INT SYM_COLON unlabelled_stmt .

    SYM_SEMICOLON   reduce using rule 66 (stmt -> INT SYM_COLON unlabelled_stmt .)
    ELSE            reduce using rule 66 (stmt -> INT SYM_COLON unlabelled_stmt .)


state 100

    (77) assign_stmt -> ID SYM_ASSIGN expression .
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_SEMICOLON   reduce using rule 77 (assign_stmt -> ID SYM_ASSIGN expression .)
    ELSE            reduce using rule 77 (assign_stmt -> ID SYM_ASSIGN expression .)
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 101

    (78) assign_stmt -> ID SYM_LBRAC expression . SYM_RBRAC SYM_ASSIGN expression
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_RBRAC       shift and go to state 157
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 102

    (79) assign_stmt -> ID SYM_DOT ID . SYM_ASSIGN expression

    SYM_ASSIGN      shift and go to state 158


state 103

    (81) proc_stmt -> ID SYM_LPAREN args_list . SYM_RPAREN
    (127) args_list -> args_list . SYM_COMMA expression

    SYM_RPAREN      shift and go to state 159
    SYM_COMMA       shift and go to state 160


state 104

    (128) args_list -> expression .
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_RPAREN      reduce using rule 128 (args_list -> expression .)
    SYM_COMMA       reduce using rule 128 (args_list -> expression .)
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 105

    (83) proc_stmt -> SYS_PROC SYM_LPAREN expression_list . SYM_RPAREN
    (99) expression_list -> expression_list . SYM_COMMA expression

    SYM_RPAREN      shift and go to state 161
    SYM_COMMA       shift and go to state 162


state 106

    (100) expression_list -> expression .
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_RPAREN      reduce using rule 100 (expression_list -> expression .)
    SYM_COMMA       reduce using rule 100 (expression_list -> expression .)
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 107

    (84) proc_stmt -> READ SYM_LPAREN factor . SYM_RPAREN

    SYM_RPAREN      shift and go to state 163


state 108

    (85) if_stmt -> IF expression THEN . stmt else_clause
    (66) stmt -> . INT SYM_COLON unlabelled_stmt
    (67) stmt -> . unlabelled_stmt
    (68) unlabelled_stmt -> . assign_stmt
    (69) unlabelled_stmt -> . proc_stmt
    (70) unlabelled_stmt -> . compound_stmt
    (71) unlabelled_stmt -> . if_stmt
    (72) unlabelled_stmt -> . repeat_stmt
    (73) unlabelled_stmt -> . while_stmt
    (74) unlabelled_stmt -> . for_stmt
    (75) unlabelled_stmt -> . case_stmt
    (76) unlabelled_stmt -> . goto_stmt
    (77) assign_stmt -> . ID SYM_ASSIGN expression
    (78) assign_stmt -> . ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
    (79) assign_stmt -> . ID SYM_DOT ID SYM_ASSIGN expression
    (80) proc_stmt -> . ID
    (81) proc_stmt -> . ID SYM_LPAREN args_list SYM_RPAREN
    (82) proc_stmt -> . SYS_PROC
    (83) proc_stmt -> . SYS_PROC SYM_LPAREN expression_list SYM_RPAREN
    (84) proc_stmt -> . READ SYM_LPAREN factor SYM_RPAREN
    (63) compound_stmt -> . BEGIN stmt_list END
    (85) if_stmt -> . IF expression THEN stmt else_clause
    (88) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (89) while_stmt -> . WHILE expression DO stmt
    (90) for_stmt -> . FOR ID SYM_ASSIGN expression direction expression DO stmt
    (93) case_stmt -> . CASE expression OF case_expr_list END
    (98) goto_stmt -> . GOTO INT

    INT             shift and go to state 26
    ID              shift and go to state 37
    SYS_PROC        shift and go to state 38
    READ            shift and go to state 39
    BEGIN           shift and go to state 12
    IF              shift and go to state 40
    REPEAT          shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CASE            shift and go to state 44
    GOTO            shift and go to state 45

    stmt                           shift and go to state 164
    unlabelled_stmt                shift and go to state 27
    assign_stmt                    shift and go to state 28
    proc_stmt                      shift and go to state 29
    compound_stmt                  shift and go to state 30
    if_stmt                        shift and go to state 31
    repeat_stmt                    shift and go to state 32
    while_stmt                     shift and go to state 33
    for_stmt                       shift and go to state 34
    case_stmt                      shift and go to state 35
    goto_stmt                      shift and go to state 36

state 109

    (101) expression -> expression SYM_GE . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expr                           shift and go to state 165
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 110

    (102) expression -> expression SYM_GT . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expr                           shift and go to state 166
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 111

    (103) expression -> expression SYM_LE . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expr                           shift and go to state 167
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 112

    (104) expression -> expression SYM_LT . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expr                           shift and go to state 168
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 113

    (105) expression -> expression SYM_EQ . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expr                           shift and go to state 169
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 114

    (106) expression -> expression SYM_NE . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expr                           shift and go to state 170
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 115

    (108) expr -> expr SYM_ADD . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    term                           shift and go to state 171
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 116

    (109) expr -> expr SYM_SUB . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    term                           shift and go to state 172
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 117

    (110) expr -> expr OR . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    term                           shift and go to state 173
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 118

    (112) term -> term SYM_MUL . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    factor                         shift and go to state 174
    const_value                    shift and go to state 70

state 119

    (113) term -> term SYM_DIV . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    factor                         shift and go to state 175
    const_value                    shift and go to state 70

state 120

    (114) term -> term MOD . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    factor                         shift and go to state 176
    const_value                    shift and go to state 70

state 121

    (115) term -> term AND . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    factor                         shift and go to state 177
    const_value                    shift and go to state 70

state 122

    (124) factor -> SYM_SUB factor .

    SYM_MUL         reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_DIV         reduce using rule 124 (factor -> SYM_SUB factor .)
    MOD             reduce using rule 124 (factor -> SYM_SUB factor .)
    AND             reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_ADD         reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_SUB         reduce using rule 124 (factor -> SYM_SUB factor .)
    OR              reduce using rule 124 (factor -> SYM_SUB factor .)
    THEN            reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_GE          reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_GT          reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_LE          reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_LT          reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_EQ          reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_NE          reduce using rule 124 (factor -> SYM_SUB factor .)
    DO              reduce using rule 124 (factor -> SYM_SUB factor .)
    OF              reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_SEMICOLON   reduce using rule 124 (factor -> SYM_SUB factor .)
    ELSE            reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_RBRAC       reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_RPAREN      reduce using rule 124 (factor -> SYM_SUB factor .)
    SYM_COMMA       reduce using rule 124 (factor -> SYM_SUB factor .)
    TO              reduce using rule 124 (factor -> SYM_SUB factor .)
    DOWNTO          reduce using rule 124 (factor -> SYM_SUB factor .)


state 123

    (118) factor -> ID SYM_LPAREN . args_list SYM_RPAREN
    (127) args_list -> . args_list SYM_COMMA expression
    (128) args_list -> . expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    args_list                      shift and go to state 178
    expression                     shift and go to state 104
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 124

    (125) factor -> ID SYM_LBRAC . expression SYM_RBRAC
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 179
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 125

    (126) factor -> ID SYM_DOT . ID

    ID              shift and go to state 180


state 126

    (122) factor -> SYM_LPAREN expression . SYM_RPAREN
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_RPAREN      shift and go to state 181
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 127

    (120) factor -> SYS_FUNCT SYM_LPAREN . args_list SYM_RPAREN
    (127) args_list -> . args_list SYM_COMMA expression
    (128) args_list -> . expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    args_list                      shift and go to state 182
    expression                     shift and go to state 104
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 128

    (123) factor -> NOT factor .

    SYM_MUL         reduce using rule 123 (factor -> NOT factor .)
    SYM_DIV         reduce using rule 123 (factor -> NOT factor .)
    MOD             reduce using rule 123 (factor -> NOT factor .)
    AND             reduce using rule 123 (factor -> NOT factor .)
    SYM_ADD         reduce using rule 123 (factor -> NOT factor .)
    SYM_SUB         reduce using rule 123 (factor -> NOT factor .)
    OR              reduce using rule 123 (factor -> NOT factor .)
    THEN            reduce using rule 123 (factor -> NOT factor .)
    SYM_GE          reduce using rule 123 (factor -> NOT factor .)
    SYM_GT          reduce using rule 123 (factor -> NOT factor .)
    SYM_LE          reduce using rule 123 (factor -> NOT factor .)
    SYM_LT          reduce using rule 123 (factor -> NOT factor .)
    SYM_EQ          reduce using rule 123 (factor -> NOT factor .)
    SYM_NE          reduce using rule 123 (factor -> NOT factor .)
    DO              reduce using rule 123 (factor -> NOT factor .)
    OF              reduce using rule 123 (factor -> NOT factor .)
    SYM_SEMICOLON   reduce using rule 123 (factor -> NOT factor .)
    ELSE            reduce using rule 123 (factor -> NOT factor .)
    SYM_RBRAC       reduce using rule 123 (factor -> NOT factor .)
    SYM_RPAREN      reduce using rule 123 (factor -> NOT factor .)
    SYM_COMMA       reduce using rule 123 (factor -> NOT factor .)
    TO              reduce using rule 123 (factor -> NOT factor .)
    DOWNTO          reduce using rule 123 (factor -> NOT factor .)


state 129

    (88) repeat_stmt -> REPEAT stmt_list UNTIL . expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 183
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 130

    (89) while_stmt -> WHILE expression DO . stmt
    (66) stmt -> . INT SYM_COLON unlabelled_stmt
    (67) stmt -> . unlabelled_stmt
    (68) unlabelled_stmt -> . assign_stmt
    (69) unlabelled_stmt -> . proc_stmt
    (70) unlabelled_stmt -> . compound_stmt
    (71) unlabelled_stmt -> . if_stmt
    (72) unlabelled_stmt -> . repeat_stmt
    (73) unlabelled_stmt -> . while_stmt
    (74) unlabelled_stmt -> . for_stmt
    (75) unlabelled_stmt -> . case_stmt
    (76) unlabelled_stmt -> . goto_stmt
    (77) assign_stmt -> . ID SYM_ASSIGN expression
    (78) assign_stmt -> . ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
    (79) assign_stmt -> . ID SYM_DOT ID SYM_ASSIGN expression
    (80) proc_stmt -> . ID
    (81) proc_stmt -> . ID SYM_LPAREN args_list SYM_RPAREN
    (82) proc_stmt -> . SYS_PROC
    (83) proc_stmt -> . SYS_PROC SYM_LPAREN expression_list SYM_RPAREN
    (84) proc_stmt -> . READ SYM_LPAREN factor SYM_RPAREN
    (63) compound_stmt -> . BEGIN stmt_list END
    (85) if_stmt -> . IF expression THEN stmt else_clause
    (88) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (89) while_stmt -> . WHILE expression DO stmt
    (90) for_stmt -> . FOR ID SYM_ASSIGN expression direction expression DO stmt
    (93) case_stmt -> . CASE expression OF case_expr_list END
    (98) goto_stmt -> . GOTO INT

    INT             shift and go to state 26
    ID              shift and go to state 37
    SYS_PROC        shift and go to state 38
    READ            shift and go to state 39
    BEGIN           shift and go to state 12
    IF              shift and go to state 40
    REPEAT          shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CASE            shift and go to state 44
    GOTO            shift and go to state 45

    stmt                           shift and go to state 184
    unlabelled_stmt                shift and go to state 27
    assign_stmt                    shift and go to state 28
    proc_stmt                      shift and go to state 29
    compound_stmt                  shift and go to state 30
    if_stmt                        shift and go to state 31
    repeat_stmt                    shift and go to state 32
    while_stmt                     shift and go to state 33
    for_stmt                       shift and go to state 34
    case_stmt                      shift and go to state 35
    goto_stmt                      shift and go to state 36

state 131

    (90) for_stmt -> FOR ID SYM_ASSIGN . expression direction expression DO stmt
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 185
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 132

    (93) case_stmt -> CASE expression OF . case_expr_list END
    (94) case_expr_list -> . case_expr_list case_expr
    (95) case_expr_list -> . case_expr
    (96) case_expr -> . const_value SYM_COLON stmt SYM_SEMICOLON
    (97) case_expr -> . ID SYM_COLON stmt SYM_SEMICOLON
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 189
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    case_expr_list                 shift and go to state 186
    case_expr                      shift and go to state 187
    const_value                    shift and go to state 188

state 133

    (45) routine_part -> routine_part func_decl .

    FUNCTION        reduce using rule 45 (routine_part -> routine_part func_decl .)
    PROCEDURE       reduce using rule 45 (routine_part -> routine_part func_decl .)
    BEGIN           reduce using rule 45 (routine_part -> routine_part func_decl .)


state 134

    (46) routine_part -> routine_part procedure_decl .

    FUNCTION        reduce using rule 46 (routine_part -> routine_part procedure_decl .)
    PROCEDURE       reduce using rule 46 (routine_part -> routine_part procedure_decl .)
    BEGIN           reduce using rule 46 (routine_part -> routine_part procedure_decl .)


state 135

    (50) func_decl -> func_head SYM_SEMICOLON . sub_routine SYM_SEMICOLON
    (4) sub_routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . epsilon
    (129) epsilon -> .

    CONST           reduce using rule 129 (epsilon -> .)
    TYPE            reduce using rule 129 (epsilon -> .)
    VAR             reduce using rule 129 (epsilon -> .)
    FUNCTION        reduce using rule 129 (epsilon -> .)
    PROCEDURE       reduce using rule 129 (epsilon -> .)
    BEGIN           reduce using rule 129 (epsilon -> .)

    sub_routine                    shift and go to state 190
    routine_head                   shift and go to state 191
    label_part                     shift and go to state 6
    epsilon                        shift and go to state 7

state 136

    (52) procedure_decl -> procedure_head SYM_SEMICOLON . sub_routine SYM_SEMICOLON
    (4) sub_routine -> . routine_head routine_body
    (5) routine_head -> . label_part const_part type_part var_part routine_part
    (6) label_part -> . epsilon
    (129) epsilon -> .

    CONST           reduce using rule 129 (epsilon -> .)
    TYPE            reduce using rule 129 (epsilon -> .)
    VAR             reduce using rule 129 (epsilon -> .)
    FUNCTION        reduce using rule 129 (epsilon -> .)
    PROCEDURE       reduce using rule 129 (epsilon -> .)
    BEGIN           reduce using rule 129 (epsilon -> .)

    sub_routine                    shift and go to state 192
    routine_head                   shift and go to state 191
    label_part                     shift and go to state 6
    epsilon                        shift and go to state 7

state 137

    (51) func_head -> FUNCTION ID . parameters SYM_COLON simple_type_decl
    (54) parameters -> . SYM_LPAREN para_decl_list SYM_RPAREN
    (55) parameters -> . epsilon
    (129) epsilon -> .

    SYM_LPAREN      shift and go to state 194
    SYM_COLON       reduce using rule 129 (epsilon -> .)

    parameters                     shift and go to state 193
    epsilon                        shift and go to state 195

state 138

    (53) procedure_head -> PROCEDURE ID . parameters
    (54) parameters -> . SYM_LPAREN para_decl_list SYM_RPAREN
    (55) parameters -> . epsilon
    (129) epsilon -> .

    SYM_LPAREN      shift and go to state 194
    SYM_SEMICOLON   reduce using rule 129 (epsilon -> .)

    parameters                     shift and go to state 196
    epsilon                        shift and go to state 195

state 139

    (42) var_decl_list -> var_decl_list var_decl .

    ID              reduce using rule 42 (var_decl_list -> var_decl_list var_decl .)
    FUNCTION        reduce using rule 42 (var_decl_list -> var_decl_list var_decl .)
    PROCEDURE       reduce using rule 42 (var_decl_list -> var_decl_list var_decl .)
    BEGIN           reduce using rule 42 (var_decl_list -> var_decl_list var_decl .)


state 140

    (44) var_decl -> name_list SYM_COLON . type_decl SYM_SEMICOLON
    (23) type_decl -> . simple_type_decl
    (24) type_decl -> . array_type_decl
    (25) type_decl -> . record_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . ID
    (28) simple_type_decl -> . SYM_LPAREN name_list SYM_RPAREN
    (29) simple_type_decl -> . const_value SYM_RANGE const_value
    (30) simple_type_decl -> . SYM_SUB const_value SYM_RANGE const_value
    (31) simple_type_decl -> . SYM_SUB const_value SYM_RANGE SYM_SUB const_value
    (32) simple_type_decl -> . ID SYM_RANGE ID
    (33) array_type_decl -> . ARRAY SYM_LBRAC simple_type_decl SYM_RBRAC OF type_decl
    (34) record_type_decl -> . RECORD field_decl_list END
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYS_TYPE        shift and go to state 147
    ID              shift and go to state 142
    SYM_LPAREN      shift and go to state 148
    SYM_SUB         shift and go to state 150
    ARRAY           shift and go to state 151
    RECORD          shift and go to state 152
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    type_decl                      shift and go to state 197
    simple_type_decl               shift and go to state 144
    array_type_decl                shift and go to state 145
    record_type_decl               shift and go to state 146
    const_value                    shift and go to state 149

state 141

    (38) name_list -> name_list SYM_COMMA . ID

    ID              shift and go to state 198


state 142

    (27) simple_type_decl -> ID .
    (32) simple_type_decl -> ID . SYM_RANGE ID

    SYM_SEMICOLON   reduce using rule 27 (simple_type_decl -> ID .)
    SYM_RBRAC       reduce using rule 27 (simple_type_decl -> ID .)
    SYM_RPAREN      reduce using rule 27 (simple_type_decl -> ID .)
    SYM_RANGE       shift and go to state 199


state 143

    (22) type_def -> ID SYM_EQ type_decl . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 200


state 144

    (23) type_decl -> simple_type_decl .

    SYM_SEMICOLON   reduce using rule 23 (type_decl -> simple_type_decl .)


state 145

    (24) type_decl -> array_type_decl .

    SYM_SEMICOLON   reduce using rule 24 (type_decl -> array_type_decl .)


state 146

    (25) type_decl -> record_type_decl .

    SYM_SEMICOLON   reduce using rule 25 (type_decl -> record_type_decl .)


state 147

    (26) simple_type_decl -> SYS_TYPE .

    SYM_SEMICOLON   reduce using rule 26 (simple_type_decl -> SYS_TYPE .)
    SYM_RBRAC       reduce using rule 26 (simple_type_decl -> SYS_TYPE .)
    SYM_RPAREN      reduce using rule 26 (simple_type_decl -> SYS_TYPE .)


state 148

    (28) simple_type_decl -> SYM_LPAREN . name_list SYM_RPAREN
    (38) name_list -> . name_list SYM_COMMA ID
    (39) name_list -> . ID

    ID              shift and go to state 93

    name_list                      shift and go to state 201

state 149

    (29) simple_type_decl -> const_value . SYM_RANGE const_value

    SYM_RANGE       shift and go to state 202


state 150

    (30) simple_type_decl -> SYM_SUB . const_value SYM_RANGE const_value
    (31) simple_type_decl -> SYM_SUB . const_value SYM_RANGE SYM_SUB const_value
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    const_value                    shift and go to state 203

state 151

    (33) array_type_decl -> ARRAY . SYM_LBRAC simple_type_decl SYM_RBRAC OF type_decl

    SYM_LBRAC       shift and go to state 204


state 152

    (34) record_type_decl -> RECORD . field_decl_list END
    (35) field_decl_list -> . field_decl_list field_decl
    (36) field_decl_list -> . field_decl
    (37) field_decl -> . name_list SYM_COLON type_decl SYM_SEMICOLON
    (38) name_list -> . name_list SYM_COMMA ID
    (39) name_list -> . ID

    ID              shift and go to state 93

    field_decl_list                shift and go to state 205
    field_decl                     shift and go to state 206
    name_list                      shift and go to state 207

state 153

    (9) const_expr_list -> const_expr_list ID SYM_EQ const_value . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 208


state 154

    (11) const_expr_list -> const_expr_list ID SYM_EQ SYM_SUB . const_value SYM_SEMICOLON
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    const_value                    shift and go to state 209

state 155

    (10) const_expr_list -> ID SYM_EQ const_value SYM_SEMICOLON .

    ID              reduce using rule 10 (const_expr_list -> ID SYM_EQ const_value SYM_SEMICOLON .)
    TYPE            reduce using rule 10 (const_expr_list -> ID SYM_EQ const_value SYM_SEMICOLON .)
    VAR             reduce using rule 10 (const_expr_list -> ID SYM_EQ const_value SYM_SEMICOLON .)
    FUNCTION        reduce using rule 10 (const_expr_list -> ID SYM_EQ const_value SYM_SEMICOLON .)
    PROCEDURE       reduce using rule 10 (const_expr_list -> ID SYM_EQ const_value SYM_SEMICOLON .)
    BEGIN           reduce using rule 10 (const_expr_list -> ID SYM_EQ const_value SYM_SEMICOLON .)


state 156

    (12) const_expr_list -> ID SYM_EQ SYM_SUB const_value . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 210


state 157

    (78) assign_stmt -> ID SYM_LBRAC expression SYM_RBRAC . SYM_ASSIGN expression

    SYM_ASSIGN      shift and go to state 211


state 158

    (79) assign_stmt -> ID SYM_DOT ID SYM_ASSIGN . expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 212
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 159

    (81) proc_stmt -> ID SYM_LPAREN args_list SYM_RPAREN .

    SYM_SEMICOLON   reduce using rule 81 (proc_stmt -> ID SYM_LPAREN args_list SYM_RPAREN .)
    ELSE            reduce using rule 81 (proc_stmt -> ID SYM_LPAREN args_list SYM_RPAREN .)


state 160

    (127) args_list -> args_list SYM_COMMA . expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 213
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 161

    (83) proc_stmt -> SYS_PROC SYM_LPAREN expression_list SYM_RPAREN .

    SYM_SEMICOLON   reduce using rule 83 (proc_stmt -> SYS_PROC SYM_LPAREN expression_list SYM_RPAREN .)
    ELSE            reduce using rule 83 (proc_stmt -> SYS_PROC SYM_LPAREN expression_list SYM_RPAREN .)


state 162

    (99) expression_list -> expression_list SYM_COMMA . expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 214
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 163

    (84) proc_stmt -> READ SYM_LPAREN factor SYM_RPAREN .

    SYM_SEMICOLON   reduce using rule 84 (proc_stmt -> READ SYM_LPAREN factor SYM_RPAREN .)
    ELSE            reduce using rule 84 (proc_stmt -> READ SYM_LPAREN factor SYM_RPAREN .)


state 164

    (85) if_stmt -> IF expression THEN stmt . else_clause
    (86) else_clause -> . ELSE stmt
    (87) else_clause -> . epsilon
    (129) epsilon -> .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 216
    SYM_SEMICOLON   reduce using rule 129 (epsilon -> .)

  ! ELSE            [ reduce using rule 129 (epsilon -> .) ]

    else_clause                    shift and go to state 215
    epsilon                        shift and go to state 217

state 165

    (101) expression -> expression SYM_GE expr .
    (108) expr -> expr . SYM_ADD term
    (109) expr -> expr . SYM_SUB term
    (110) expr -> expr . OR term

    THEN            reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_GE          reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_GT          reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_LE          reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_LT          reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_EQ          reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_NE          reduce using rule 101 (expression -> expression SYM_GE expr .)
    DO              reduce using rule 101 (expression -> expression SYM_GE expr .)
    OF              reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_SEMICOLON   reduce using rule 101 (expression -> expression SYM_GE expr .)
    ELSE            reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_RBRAC       reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_RPAREN      reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_COMMA       reduce using rule 101 (expression -> expression SYM_GE expr .)
    TO              reduce using rule 101 (expression -> expression SYM_GE expr .)
    DOWNTO          reduce using rule 101 (expression -> expression SYM_GE expr .)
    SYM_ADD         shift and go to state 115
    SYM_SUB         shift and go to state 116
    OR              shift and go to state 117


state 166

    (102) expression -> expression SYM_GT expr .
    (108) expr -> expr . SYM_ADD term
    (109) expr -> expr . SYM_SUB term
    (110) expr -> expr . OR term

    THEN            reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_GE          reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_GT          reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_LE          reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_LT          reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_EQ          reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_NE          reduce using rule 102 (expression -> expression SYM_GT expr .)
    DO              reduce using rule 102 (expression -> expression SYM_GT expr .)
    OF              reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_SEMICOLON   reduce using rule 102 (expression -> expression SYM_GT expr .)
    ELSE            reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_RBRAC       reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_RPAREN      reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_COMMA       reduce using rule 102 (expression -> expression SYM_GT expr .)
    TO              reduce using rule 102 (expression -> expression SYM_GT expr .)
    DOWNTO          reduce using rule 102 (expression -> expression SYM_GT expr .)
    SYM_ADD         shift and go to state 115
    SYM_SUB         shift and go to state 116
    OR              shift and go to state 117


state 167

    (103) expression -> expression SYM_LE expr .
    (108) expr -> expr . SYM_ADD term
    (109) expr -> expr . SYM_SUB term
    (110) expr -> expr . OR term

    THEN            reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_GE          reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_GT          reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_LE          reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_LT          reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_EQ          reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_NE          reduce using rule 103 (expression -> expression SYM_LE expr .)
    DO              reduce using rule 103 (expression -> expression SYM_LE expr .)
    OF              reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_SEMICOLON   reduce using rule 103 (expression -> expression SYM_LE expr .)
    ELSE            reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_RBRAC       reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_RPAREN      reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_COMMA       reduce using rule 103 (expression -> expression SYM_LE expr .)
    TO              reduce using rule 103 (expression -> expression SYM_LE expr .)
    DOWNTO          reduce using rule 103 (expression -> expression SYM_LE expr .)
    SYM_ADD         shift and go to state 115
    SYM_SUB         shift and go to state 116
    OR              shift and go to state 117


state 168

    (104) expression -> expression SYM_LT expr .
    (108) expr -> expr . SYM_ADD term
    (109) expr -> expr . SYM_SUB term
    (110) expr -> expr . OR term

    THEN            reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_GE          reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_GT          reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_LE          reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_LT          reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_EQ          reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_NE          reduce using rule 104 (expression -> expression SYM_LT expr .)
    DO              reduce using rule 104 (expression -> expression SYM_LT expr .)
    OF              reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_SEMICOLON   reduce using rule 104 (expression -> expression SYM_LT expr .)
    ELSE            reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_RBRAC       reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_RPAREN      reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_COMMA       reduce using rule 104 (expression -> expression SYM_LT expr .)
    TO              reduce using rule 104 (expression -> expression SYM_LT expr .)
    DOWNTO          reduce using rule 104 (expression -> expression SYM_LT expr .)
    SYM_ADD         shift and go to state 115
    SYM_SUB         shift and go to state 116
    OR              shift and go to state 117


state 169

    (105) expression -> expression SYM_EQ expr .
    (108) expr -> expr . SYM_ADD term
    (109) expr -> expr . SYM_SUB term
    (110) expr -> expr . OR term

    THEN            reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_GE          reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_GT          reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_LE          reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_LT          reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_EQ          reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_NE          reduce using rule 105 (expression -> expression SYM_EQ expr .)
    DO              reduce using rule 105 (expression -> expression SYM_EQ expr .)
    OF              reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_SEMICOLON   reduce using rule 105 (expression -> expression SYM_EQ expr .)
    ELSE            reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_RBRAC       reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_RPAREN      reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_COMMA       reduce using rule 105 (expression -> expression SYM_EQ expr .)
    TO              reduce using rule 105 (expression -> expression SYM_EQ expr .)
    DOWNTO          reduce using rule 105 (expression -> expression SYM_EQ expr .)
    SYM_ADD         shift and go to state 115
    SYM_SUB         shift and go to state 116
    OR              shift and go to state 117


state 170

    (106) expression -> expression SYM_NE expr .
    (108) expr -> expr . SYM_ADD term
    (109) expr -> expr . SYM_SUB term
    (110) expr -> expr . OR term

    THEN            reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_GE          reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_GT          reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_LE          reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_LT          reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_EQ          reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_NE          reduce using rule 106 (expression -> expression SYM_NE expr .)
    DO              reduce using rule 106 (expression -> expression SYM_NE expr .)
    OF              reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_SEMICOLON   reduce using rule 106 (expression -> expression SYM_NE expr .)
    ELSE            reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_RBRAC       reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_RPAREN      reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_COMMA       reduce using rule 106 (expression -> expression SYM_NE expr .)
    TO              reduce using rule 106 (expression -> expression SYM_NE expr .)
    DOWNTO          reduce using rule 106 (expression -> expression SYM_NE expr .)
    SYM_ADD         shift and go to state 115
    SYM_SUB         shift and go to state 116
    OR              shift and go to state 117


state 171

    (108) expr -> expr SYM_ADD term .
    (112) term -> term . SYM_MUL factor
    (113) term -> term . SYM_DIV factor
    (114) term -> term . MOD factor
    (115) term -> term . AND factor

    SYM_ADD         reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_SUB         reduce using rule 108 (expr -> expr SYM_ADD term .)
    OR              reduce using rule 108 (expr -> expr SYM_ADD term .)
    THEN            reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_GE          reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_GT          reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_LE          reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_LT          reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_EQ          reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_NE          reduce using rule 108 (expr -> expr SYM_ADD term .)
    DO              reduce using rule 108 (expr -> expr SYM_ADD term .)
    OF              reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_SEMICOLON   reduce using rule 108 (expr -> expr SYM_ADD term .)
    ELSE            reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_RBRAC       reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_RPAREN      reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_COMMA       reduce using rule 108 (expr -> expr SYM_ADD term .)
    TO              reduce using rule 108 (expr -> expr SYM_ADD term .)
    DOWNTO          reduce using rule 108 (expr -> expr SYM_ADD term .)
    SYM_MUL         shift and go to state 118
    SYM_DIV         shift and go to state 119
    MOD             shift and go to state 120
    AND             shift and go to state 121


state 172

    (109) expr -> expr SYM_SUB term .
    (112) term -> term . SYM_MUL factor
    (113) term -> term . SYM_DIV factor
    (114) term -> term . MOD factor
    (115) term -> term . AND factor

    SYM_ADD         reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_SUB         reduce using rule 109 (expr -> expr SYM_SUB term .)
    OR              reduce using rule 109 (expr -> expr SYM_SUB term .)
    THEN            reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_GE          reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_GT          reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_LE          reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_LT          reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_EQ          reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_NE          reduce using rule 109 (expr -> expr SYM_SUB term .)
    DO              reduce using rule 109 (expr -> expr SYM_SUB term .)
    OF              reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_SEMICOLON   reduce using rule 109 (expr -> expr SYM_SUB term .)
    ELSE            reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_RBRAC       reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_RPAREN      reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_COMMA       reduce using rule 109 (expr -> expr SYM_SUB term .)
    TO              reduce using rule 109 (expr -> expr SYM_SUB term .)
    DOWNTO          reduce using rule 109 (expr -> expr SYM_SUB term .)
    SYM_MUL         shift and go to state 118
    SYM_DIV         shift and go to state 119
    MOD             shift and go to state 120
    AND             shift and go to state 121


state 173

    (110) expr -> expr OR term .
    (112) term -> term . SYM_MUL factor
    (113) term -> term . SYM_DIV factor
    (114) term -> term . MOD factor
    (115) term -> term . AND factor

    SYM_ADD         reduce using rule 110 (expr -> expr OR term .)
    SYM_SUB         reduce using rule 110 (expr -> expr OR term .)
    OR              reduce using rule 110 (expr -> expr OR term .)
    THEN            reduce using rule 110 (expr -> expr OR term .)
    SYM_GE          reduce using rule 110 (expr -> expr OR term .)
    SYM_GT          reduce using rule 110 (expr -> expr OR term .)
    SYM_LE          reduce using rule 110 (expr -> expr OR term .)
    SYM_LT          reduce using rule 110 (expr -> expr OR term .)
    SYM_EQ          reduce using rule 110 (expr -> expr OR term .)
    SYM_NE          reduce using rule 110 (expr -> expr OR term .)
    DO              reduce using rule 110 (expr -> expr OR term .)
    OF              reduce using rule 110 (expr -> expr OR term .)
    SYM_SEMICOLON   reduce using rule 110 (expr -> expr OR term .)
    ELSE            reduce using rule 110 (expr -> expr OR term .)
    SYM_RBRAC       reduce using rule 110 (expr -> expr OR term .)
    SYM_RPAREN      reduce using rule 110 (expr -> expr OR term .)
    SYM_COMMA       reduce using rule 110 (expr -> expr OR term .)
    TO              reduce using rule 110 (expr -> expr OR term .)
    DOWNTO          reduce using rule 110 (expr -> expr OR term .)
    SYM_MUL         shift and go to state 118
    SYM_DIV         shift and go to state 119
    MOD             shift and go to state 120
    AND             shift and go to state 121


state 174

    (112) term -> term SYM_MUL factor .

    SYM_MUL         reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_DIV         reduce using rule 112 (term -> term SYM_MUL factor .)
    MOD             reduce using rule 112 (term -> term SYM_MUL factor .)
    AND             reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_ADD         reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_SUB         reduce using rule 112 (term -> term SYM_MUL factor .)
    OR              reduce using rule 112 (term -> term SYM_MUL factor .)
    THEN            reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_GE          reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_GT          reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_LE          reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_LT          reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_EQ          reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_NE          reduce using rule 112 (term -> term SYM_MUL factor .)
    DO              reduce using rule 112 (term -> term SYM_MUL factor .)
    OF              reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_SEMICOLON   reduce using rule 112 (term -> term SYM_MUL factor .)
    ELSE            reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_RBRAC       reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_RPAREN      reduce using rule 112 (term -> term SYM_MUL factor .)
    SYM_COMMA       reduce using rule 112 (term -> term SYM_MUL factor .)
    TO              reduce using rule 112 (term -> term SYM_MUL factor .)
    DOWNTO          reduce using rule 112 (term -> term SYM_MUL factor .)


state 175

    (113) term -> term SYM_DIV factor .

    SYM_MUL         reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_DIV         reduce using rule 113 (term -> term SYM_DIV factor .)
    MOD             reduce using rule 113 (term -> term SYM_DIV factor .)
    AND             reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_ADD         reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_SUB         reduce using rule 113 (term -> term SYM_DIV factor .)
    OR              reduce using rule 113 (term -> term SYM_DIV factor .)
    THEN            reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_GE          reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_GT          reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_LE          reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_LT          reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_EQ          reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_NE          reduce using rule 113 (term -> term SYM_DIV factor .)
    DO              reduce using rule 113 (term -> term SYM_DIV factor .)
    OF              reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_SEMICOLON   reduce using rule 113 (term -> term SYM_DIV factor .)
    ELSE            reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_RBRAC       reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_RPAREN      reduce using rule 113 (term -> term SYM_DIV factor .)
    SYM_COMMA       reduce using rule 113 (term -> term SYM_DIV factor .)
    TO              reduce using rule 113 (term -> term SYM_DIV factor .)
    DOWNTO          reduce using rule 113 (term -> term SYM_DIV factor .)


state 176

    (114) term -> term MOD factor .

    SYM_MUL         reduce using rule 114 (term -> term MOD factor .)
    SYM_DIV         reduce using rule 114 (term -> term MOD factor .)
    MOD             reduce using rule 114 (term -> term MOD factor .)
    AND             reduce using rule 114 (term -> term MOD factor .)
    SYM_ADD         reduce using rule 114 (term -> term MOD factor .)
    SYM_SUB         reduce using rule 114 (term -> term MOD factor .)
    OR              reduce using rule 114 (term -> term MOD factor .)
    THEN            reduce using rule 114 (term -> term MOD factor .)
    SYM_GE          reduce using rule 114 (term -> term MOD factor .)
    SYM_GT          reduce using rule 114 (term -> term MOD factor .)
    SYM_LE          reduce using rule 114 (term -> term MOD factor .)
    SYM_LT          reduce using rule 114 (term -> term MOD factor .)
    SYM_EQ          reduce using rule 114 (term -> term MOD factor .)
    SYM_NE          reduce using rule 114 (term -> term MOD factor .)
    DO              reduce using rule 114 (term -> term MOD factor .)
    OF              reduce using rule 114 (term -> term MOD factor .)
    SYM_SEMICOLON   reduce using rule 114 (term -> term MOD factor .)
    ELSE            reduce using rule 114 (term -> term MOD factor .)
    SYM_RBRAC       reduce using rule 114 (term -> term MOD factor .)
    SYM_RPAREN      reduce using rule 114 (term -> term MOD factor .)
    SYM_COMMA       reduce using rule 114 (term -> term MOD factor .)
    TO              reduce using rule 114 (term -> term MOD factor .)
    DOWNTO          reduce using rule 114 (term -> term MOD factor .)


state 177

    (115) term -> term AND factor .

    SYM_MUL         reduce using rule 115 (term -> term AND factor .)
    SYM_DIV         reduce using rule 115 (term -> term AND factor .)
    MOD             reduce using rule 115 (term -> term AND factor .)
    AND             reduce using rule 115 (term -> term AND factor .)
    SYM_ADD         reduce using rule 115 (term -> term AND factor .)
    SYM_SUB         reduce using rule 115 (term -> term AND factor .)
    OR              reduce using rule 115 (term -> term AND factor .)
    THEN            reduce using rule 115 (term -> term AND factor .)
    SYM_GE          reduce using rule 115 (term -> term AND factor .)
    SYM_GT          reduce using rule 115 (term -> term AND factor .)
    SYM_LE          reduce using rule 115 (term -> term AND factor .)
    SYM_LT          reduce using rule 115 (term -> term AND factor .)
    SYM_EQ          reduce using rule 115 (term -> term AND factor .)
    SYM_NE          reduce using rule 115 (term -> term AND factor .)
    DO              reduce using rule 115 (term -> term AND factor .)
    OF              reduce using rule 115 (term -> term AND factor .)
    SYM_SEMICOLON   reduce using rule 115 (term -> term AND factor .)
    ELSE            reduce using rule 115 (term -> term AND factor .)
    SYM_RBRAC       reduce using rule 115 (term -> term AND factor .)
    SYM_RPAREN      reduce using rule 115 (term -> term AND factor .)
    SYM_COMMA       reduce using rule 115 (term -> term AND factor .)
    TO              reduce using rule 115 (term -> term AND factor .)
    DOWNTO          reduce using rule 115 (term -> term AND factor .)


state 178

    (118) factor -> ID SYM_LPAREN args_list . SYM_RPAREN
    (127) args_list -> args_list . SYM_COMMA expression

    SYM_RPAREN      shift and go to state 218
    SYM_COMMA       shift and go to state 160


state 179

    (125) factor -> ID SYM_LBRAC expression . SYM_RBRAC
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_RBRAC       shift and go to state 219
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 180

    (126) factor -> ID SYM_DOT ID .

    SYM_MUL         reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_DIV         reduce using rule 126 (factor -> ID SYM_DOT ID .)
    MOD             reduce using rule 126 (factor -> ID SYM_DOT ID .)
    AND             reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_ADD         reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_SUB         reduce using rule 126 (factor -> ID SYM_DOT ID .)
    OR              reduce using rule 126 (factor -> ID SYM_DOT ID .)
    THEN            reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_GE          reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_GT          reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_LE          reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_LT          reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_EQ          reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_NE          reduce using rule 126 (factor -> ID SYM_DOT ID .)
    DO              reduce using rule 126 (factor -> ID SYM_DOT ID .)
    OF              reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_SEMICOLON   reduce using rule 126 (factor -> ID SYM_DOT ID .)
    ELSE            reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_RBRAC       reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_RPAREN      reduce using rule 126 (factor -> ID SYM_DOT ID .)
    SYM_COMMA       reduce using rule 126 (factor -> ID SYM_DOT ID .)
    TO              reduce using rule 126 (factor -> ID SYM_DOT ID .)
    DOWNTO          reduce using rule 126 (factor -> ID SYM_DOT ID .)


state 181

    (122) factor -> SYM_LPAREN expression SYM_RPAREN .

    SYM_MUL         reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_DIV         reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    MOD             reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    AND             reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_ADD         reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_SUB         reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    OR              reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    THEN            reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_GE          reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_GT          reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_LE          reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_LT          reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_EQ          reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_NE          reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    DO              reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    OF              reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_SEMICOLON   reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    ELSE            reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_RBRAC       reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_RPAREN      reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    SYM_COMMA       reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    TO              reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)
    DOWNTO          reduce using rule 122 (factor -> SYM_LPAREN expression SYM_RPAREN .)


state 182

    (120) factor -> SYS_FUNCT SYM_LPAREN args_list . SYM_RPAREN
    (127) args_list -> args_list . SYM_COMMA expression

    SYM_RPAREN      shift and go to state 220
    SYM_COMMA       shift and go to state 160


state 183

    (88) repeat_stmt -> REPEAT stmt_list UNTIL expression .
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_SEMICOLON   reduce using rule 88 (repeat_stmt -> REPEAT stmt_list UNTIL expression .)
    ELSE            reduce using rule 88 (repeat_stmt -> REPEAT stmt_list UNTIL expression .)
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 184

    (89) while_stmt -> WHILE expression DO stmt .

    SYM_SEMICOLON   reduce using rule 89 (while_stmt -> WHILE expression DO stmt .)
    ELSE            reduce using rule 89 (while_stmt -> WHILE expression DO stmt .)


state 185

    (90) for_stmt -> FOR ID SYM_ASSIGN expression . direction expression DO stmt
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr
    (91) direction -> . TO
    (92) direction -> . DOWNTO

    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114
    TO              shift and go to state 222
    DOWNTO          shift and go to state 223

    direction                      shift and go to state 221

state 186

    (93) case_stmt -> CASE expression OF case_expr_list . END
    (94) case_expr_list -> case_expr_list . case_expr
    (96) case_expr -> . const_value SYM_COLON stmt SYM_SEMICOLON
    (97) case_expr -> . ID SYM_COLON stmt SYM_SEMICOLON
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    END             shift and go to state 224
    ID              shift and go to state 189
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    case_expr                      shift and go to state 225
    const_value                    shift and go to state 188

state 187

    (95) case_expr_list -> case_expr .

    END             reduce using rule 95 (case_expr_list -> case_expr .)
    ID              reduce using rule 95 (case_expr_list -> case_expr .)
    INT             reduce using rule 95 (case_expr_list -> case_expr .)
    REAL            reduce using rule 95 (case_expr_list -> case_expr .)
    CHAR            reduce using rule 95 (case_expr_list -> case_expr .)
    STR             reduce using rule 95 (case_expr_list -> case_expr .)
    SYS_CONST       reduce using rule 95 (case_expr_list -> case_expr .)


state 188

    (96) case_expr -> const_value . SYM_COLON stmt SYM_SEMICOLON

    SYM_COLON       shift and go to state 226


state 189

    (97) case_expr -> ID . SYM_COLON stmt SYM_SEMICOLON

    SYM_COLON       shift and go to state 227


state 190

    (50) func_decl -> func_head SYM_SEMICOLON sub_routine . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 228


state 191

    (4) sub_routine -> routine_head . routine_body
    (62) routine_body -> . compound_stmt
    (63) compound_stmt -> . BEGIN stmt_list END

    BEGIN           shift and go to state 12

    routine_body                   shift and go to state 229
    compound_stmt                  shift and go to state 11

state 192

    (52) procedure_decl -> procedure_head SYM_SEMICOLON sub_routine . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 230


state 193

    (51) func_head -> FUNCTION ID parameters . SYM_COLON simple_type_decl

    SYM_COLON       shift and go to state 231


state 194

    (54) parameters -> SYM_LPAREN . para_decl_list SYM_RPAREN
    (56) para_decl_list -> . para_decl_list SYM_SEMICOLON para_type_list
    (57) para_decl_list -> . para_type_list
    (58) para_type_list -> . var_para_list SYM_COLON simple_type_decl
    (59) para_type_list -> . val_para_list SYM_COLON simple_type_decl
    (60) var_para_list -> . VAR name_list
    (61) val_para_list -> . name_list
    (38) name_list -> . name_list SYM_COMMA ID
    (39) name_list -> . ID

    VAR             shift and go to state 236
    ID              shift and go to state 93

    para_decl_list                 shift and go to state 232
    para_type_list                 shift and go to state 233
    var_para_list                  shift and go to state 234
    val_para_list                  shift and go to state 235
    name_list                      shift and go to state 237

state 195

    (55) parameters -> epsilon .

    SYM_COLON       reduce using rule 55 (parameters -> epsilon .)
    SYM_SEMICOLON   reduce using rule 55 (parameters -> epsilon .)


state 196

    (53) procedure_head -> PROCEDURE ID parameters .

    SYM_SEMICOLON   reduce using rule 53 (procedure_head -> PROCEDURE ID parameters .)


state 197

    (44) var_decl -> name_list SYM_COLON type_decl . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 238


state 198

    (38) name_list -> name_list SYM_COMMA ID .

    SYM_COLON       reduce using rule 38 (name_list -> name_list SYM_COMMA ID .)
    SYM_COMMA       reduce using rule 38 (name_list -> name_list SYM_COMMA ID .)
    SYM_RPAREN      reduce using rule 38 (name_list -> name_list SYM_COMMA ID .)


state 199

    (32) simple_type_decl -> ID SYM_RANGE . ID

    ID              shift and go to state 239


state 200

    (22) type_def -> ID SYM_EQ type_decl SYM_SEMICOLON .

    ID              reduce using rule 22 (type_def -> ID SYM_EQ type_decl SYM_SEMICOLON .)
    VAR             reduce using rule 22 (type_def -> ID SYM_EQ type_decl SYM_SEMICOLON .)
    FUNCTION        reduce using rule 22 (type_def -> ID SYM_EQ type_decl SYM_SEMICOLON .)
    PROCEDURE       reduce using rule 22 (type_def -> ID SYM_EQ type_decl SYM_SEMICOLON .)
    BEGIN           reduce using rule 22 (type_def -> ID SYM_EQ type_decl SYM_SEMICOLON .)


state 201

    (28) simple_type_decl -> SYM_LPAREN name_list . SYM_RPAREN
    (38) name_list -> name_list . SYM_COMMA ID

    SYM_RPAREN      shift and go to state 240
    SYM_COMMA       shift and go to state 141


state 202

    (29) simple_type_decl -> const_value SYM_RANGE . const_value
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    const_value                    shift and go to state 241

state 203

    (30) simple_type_decl -> SYM_SUB const_value . SYM_RANGE const_value
    (31) simple_type_decl -> SYM_SUB const_value . SYM_RANGE SYM_SUB const_value

    SYM_RANGE       shift and go to state 242


state 204

    (33) array_type_decl -> ARRAY SYM_LBRAC . simple_type_decl SYM_RBRAC OF type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . ID
    (28) simple_type_decl -> . SYM_LPAREN name_list SYM_RPAREN
    (29) simple_type_decl -> . const_value SYM_RANGE const_value
    (30) simple_type_decl -> . SYM_SUB const_value SYM_RANGE const_value
    (31) simple_type_decl -> . SYM_SUB const_value SYM_RANGE SYM_SUB const_value
    (32) simple_type_decl -> . ID SYM_RANGE ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYS_TYPE        shift and go to state 147
    ID              shift and go to state 142
    SYM_LPAREN      shift and go to state 148
    SYM_SUB         shift and go to state 150
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    simple_type_decl               shift and go to state 243
    const_value                    shift and go to state 149

state 205

    (34) record_type_decl -> RECORD field_decl_list . END
    (35) field_decl_list -> field_decl_list . field_decl
    (37) field_decl -> . name_list SYM_COLON type_decl SYM_SEMICOLON
    (38) name_list -> . name_list SYM_COMMA ID
    (39) name_list -> . ID

    END             shift and go to state 244
    ID              shift and go to state 93

    field_decl                     shift and go to state 245
    name_list                      shift and go to state 207

state 206

    (36) field_decl_list -> field_decl .

    END             reduce using rule 36 (field_decl_list -> field_decl .)
    ID              reduce using rule 36 (field_decl_list -> field_decl .)


state 207

    (37) field_decl -> name_list . SYM_COLON type_decl SYM_SEMICOLON
    (38) name_list -> name_list . SYM_COMMA ID

    SYM_COLON       shift and go to state 246
    SYM_COMMA       shift and go to state 141


state 208

    (9) const_expr_list -> const_expr_list ID SYM_EQ const_value SYM_SEMICOLON .

    ID              reduce using rule 9 (const_expr_list -> const_expr_list ID SYM_EQ const_value SYM_SEMICOLON .)
    TYPE            reduce using rule 9 (const_expr_list -> const_expr_list ID SYM_EQ const_value SYM_SEMICOLON .)
    VAR             reduce using rule 9 (const_expr_list -> const_expr_list ID SYM_EQ const_value SYM_SEMICOLON .)
    FUNCTION        reduce using rule 9 (const_expr_list -> const_expr_list ID SYM_EQ const_value SYM_SEMICOLON .)
    PROCEDURE       reduce using rule 9 (const_expr_list -> const_expr_list ID SYM_EQ const_value SYM_SEMICOLON .)
    BEGIN           reduce using rule 9 (const_expr_list -> const_expr_list ID SYM_EQ const_value SYM_SEMICOLON .)


state 209

    (11) const_expr_list -> const_expr_list ID SYM_EQ SYM_SUB const_value . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 247


state 210

    (12) const_expr_list -> ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .

    ID              reduce using rule 12 (const_expr_list -> ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)
    TYPE            reduce using rule 12 (const_expr_list -> ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)
    VAR             reduce using rule 12 (const_expr_list -> ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)
    FUNCTION        reduce using rule 12 (const_expr_list -> ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)
    PROCEDURE       reduce using rule 12 (const_expr_list -> ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)
    BEGIN           reduce using rule 12 (const_expr_list -> ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)


state 211

    (78) assign_stmt -> ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN . expression
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 248
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 212

    (79) assign_stmt -> ID SYM_DOT ID SYM_ASSIGN expression .
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_SEMICOLON   reduce using rule 79 (assign_stmt -> ID SYM_DOT ID SYM_ASSIGN expression .)
    ELSE            reduce using rule 79 (assign_stmt -> ID SYM_DOT ID SYM_ASSIGN expression .)
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 213

    (127) args_list -> args_list SYM_COMMA expression .
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_RPAREN      reduce using rule 127 (args_list -> args_list SYM_COMMA expression .)
    SYM_COMMA       reduce using rule 127 (args_list -> args_list SYM_COMMA expression .)
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 214

    (99) expression_list -> expression_list SYM_COMMA expression .
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_RPAREN      reduce using rule 99 (expression_list -> expression_list SYM_COMMA expression .)
    SYM_COMMA       reduce using rule 99 (expression_list -> expression_list SYM_COMMA expression .)
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 215

    (85) if_stmt -> IF expression THEN stmt else_clause .

    SYM_SEMICOLON   reduce using rule 85 (if_stmt -> IF expression THEN stmt else_clause .)
    ELSE            reduce using rule 85 (if_stmt -> IF expression THEN stmt else_clause .)


state 216

    (86) else_clause -> ELSE . stmt
    (66) stmt -> . INT SYM_COLON unlabelled_stmt
    (67) stmt -> . unlabelled_stmt
    (68) unlabelled_stmt -> . assign_stmt
    (69) unlabelled_stmt -> . proc_stmt
    (70) unlabelled_stmt -> . compound_stmt
    (71) unlabelled_stmt -> . if_stmt
    (72) unlabelled_stmt -> . repeat_stmt
    (73) unlabelled_stmt -> . while_stmt
    (74) unlabelled_stmt -> . for_stmt
    (75) unlabelled_stmt -> . case_stmt
    (76) unlabelled_stmt -> . goto_stmt
    (77) assign_stmt -> . ID SYM_ASSIGN expression
    (78) assign_stmt -> . ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
    (79) assign_stmt -> . ID SYM_DOT ID SYM_ASSIGN expression
    (80) proc_stmt -> . ID
    (81) proc_stmt -> . ID SYM_LPAREN args_list SYM_RPAREN
    (82) proc_stmt -> . SYS_PROC
    (83) proc_stmt -> . SYS_PROC SYM_LPAREN expression_list SYM_RPAREN
    (84) proc_stmt -> . READ SYM_LPAREN factor SYM_RPAREN
    (63) compound_stmt -> . BEGIN stmt_list END
    (85) if_stmt -> . IF expression THEN stmt else_clause
    (88) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (89) while_stmt -> . WHILE expression DO stmt
    (90) for_stmt -> . FOR ID SYM_ASSIGN expression direction expression DO stmt
    (93) case_stmt -> . CASE expression OF case_expr_list END
    (98) goto_stmt -> . GOTO INT

    INT             shift and go to state 26
    ID              shift and go to state 37
    SYS_PROC        shift and go to state 38
    READ            shift and go to state 39
    BEGIN           shift and go to state 12
    IF              shift and go to state 40
    REPEAT          shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CASE            shift and go to state 44
    GOTO            shift and go to state 45

    stmt                           shift and go to state 249
    unlabelled_stmt                shift and go to state 27
    assign_stmt                    shift and go to state 28
    proc_stmt                      shift and go to state 29
    compound_stmt                  shift and go to state 30
    if_stmt                        shift and go to state 31
    repeat_stmt                    shift and go to state 32
    while_stmt                     shift and go to state 33
    for_stmt                       shift and go to state 34
    case_stmt                      shift and go to state 35
    goto_stmt                      shift and go to state 36

state 217

    (87) else_clause -> epsilon .

    SYM_SEMICOLON   reduce using rule 87 (else_clause -> epsilon .)
    ELSE            reduce using rule 87 (else_clause -> epsilon .)


state 218

    (118) factor -> ID SYM_LPAREN args_list SYM_RPAREN .

    SYM_MUL         reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_DIV         reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    MOD             reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    AND             reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_ADD         reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_SUB         reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    OR              reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    THEN            reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_GE          reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_GT          reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_LE          reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_LT          reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_EQ          reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_NE          reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    DO              reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    OF              reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_SEMICOLON   reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    ELSE            reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_RBRAC       reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_RPAREN      reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    SYM_COMMA       reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    TO              reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)
    DOWNTO          reduce using rule 118 (factor -> ID SYM_LPAREN args_list SYM_RPAREN .)


state 219

    (125) factor -> ID SYM_LBRAC expression SYM_RBRAC .

    SYM_MUL         reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_DIV         reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    MOD             reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    AND             reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_ADD         reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_SUB         reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    OR              reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    THEN            reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_GE          reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_GT          reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_LE          reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_LT          reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_EQ          reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_NE          reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    DO              reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    OF              reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_SEMICOLON   reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    ELSE            reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_RBRAC       reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_RPAREN      reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    SYM_COMMA       reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    TO              reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)
    DOWNTO          reduce using rule 125 (factor -> ID SYM_LBRAC expression SYM_RBRAC .)


state 220

    (120) factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .

    SYM_MUL         reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_DIV         reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    MOD             reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    AND             reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_ADD         reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_SUB         reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    OR              reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    THEN            reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_GE          reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_GT          reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_LE          reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_LT          reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_EQ          reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_NE          reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    DO              reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    OF              reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_SEMICOLON   reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    ELSE            reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_RBRAC       reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_RPAREN      reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    SYM_COMMA       reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    TO              reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)
    DOWNTO          reduce using rule 120 (factor -> SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN .)


state 221

    (90) for_stmt -> FOR ID SYM_ASSIGN expression direction . expression DO stmt
    (101) expression -> . expression SYM_GE expr
    (102) expression -> . expression SYM_GT expr
    (103) expression -> . expression SYM_LE expr
    (104) expression -> . expression SYM_LT expr
    (105) expression -> . expression SYM_EQ expr
    (106) expression -> . expression SYM_NE expr
    (107) expression -> . expr
    (108) expr -> . expr SYM_ADD term
    (109) expr -> . expr SYM_SUB term
    (110) expr -> . expr OR term
    (111) expr -> . term
    (112) term -> . term SYM_MUL factor
    (113) term -> . term SYM_DIV factor
    (114) term -> . term MOD factor
    (115) term -> . term AND factor
    (116) term -> . factor
    (117) factor -> . ID
    (118) factor -> . ID SYM_LPAREN args_list SYM_RPAREN
    (119) factor -> . SYS_FUNCT
    (120) factor -> . SYS_FUNCT SYM_LPAREN args_list SYM_RPAREN
    (121) factor -> . const_value
    (122) factor -> . SYM_LPAREN expression SYM_RPAREN
    (123) factor -> . NOT factor
    (124) factor -> . SYM_SUB factor
    (125) factor -> . ID SYM_LBRAC expression SYM_RBRAC
    (126) factor -> . ID SYM_DOT ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    ID              shift and go to state 67
    SYS_FUNCT       shift and go to state 69
    SYM_LPAREN      shift and go to state 68
    NOT             shift and go to state 71
    SYM_SUB         shift and go to state 65
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    expression                     shift and go to state 250
    expr                           shift and go to state 63
    term                           shift and go to state 64
    factor                         shift and go to state 66
    const_value                    shift and go to state 70

state 222

    (91) direction -> TO .

    ID              reduce using rule 91 (direction -> TO .)
    SYS_FUNCT       reduce using rule 91 (direction -> TO .)
    SYM_LPAREN      reduce using rule 91 (direction -> TO .)
    NOT             reduce using rule 91 (direction -> TO .)
    SYM_SUB         reduce using rule 91 (direction -> TO .)
    INT             reduce using rule 91 (direction -> TO .)
    REAL            reduce using rule 91 (direction -> TO .)
    CHAR            reduce using rule 91 (direction -> TO .)
    STR             reduce using rule 91 (direction -> TO .)
    SYS_CONST       reduce using rule 91 (direction -> TO .)


state 223

    (92) direction -> DOWNTO .

    ID              reduce using rule 92 (direction -> DOWNTO .)
    SYS_FUNCT       reduce using rule 92 (direction -> DOWNTO .)
    SYM_LPAREN      reduce using rule 92 (direction -> DOWNTO .)
    NOT             reduce using rule 92 (direction -> DOWNTO .)
    SYM_SUB         reduce using rule 92 (direction -> DOWNTO .)
    INT             reduce using rule 92 (direction -> DOWNTO .)
    REAL            reduce using rule 92 (direction -> DOWNTO .)
    CHAR            reduce using rule 92 (direction -> DOWNTO .)
    STR             reduce using rule 92 (direction -> DOWNTO .)
    SYS_CONST       reduce using rule 92 (direction -> DOWNTO .)


state 224

    (93) case_stmt -> CASE expression OF case_expr_list END .

    SYM_SEMICOLON   reduce using rule 93 (case_stmt -> CASE expression OF case_expr_list END .)
    ELSE            reduce using rule 93 (case_stmt -> CASE expression OF case_expr_list END .)


state 225

    (94) case_expr_list -> case_expr_list case_expr .

    END             reduce using rule 94 (case_expr_list -> case_expr_list case_expr .)
    ID              reduce using rule 94 (case_expr_list -> case_expr_list case_expr .)
    INT             reduce using rule 94 (case_expr_list -> case_expr_list case_expr .)
    REAL            reduce using rule 94 (case_expr_list -> case_expr_list case_expr .)
    CHAR            reduce using rule 94 (case_expr_list -> case_expr_list case_expr .)
    STR             reduce using rule 94 (case_expr_list -> case_expr_list case_expr .)
    SYS_CONST       reduce using rule 94 (case_expr_list -> case_expr_list case_expr .)


state 226

    (96) case_expr -> const_value SYM_COLON . stmt SYM_SEMICOLON
    (66) stmt -> . INT SYM_COLON unlabelled_stmt
    (67) stmt -> . unlabelled_stmt
    (68) unlabelled_stmt -> . assign_stmt
    (69) unlabelled_stmt -> . proc_stmt
    (70) unlabelled_stmt -> . compound_stmt
    (71) unlabelled_stmt -> . if_stmt
    (72) unlabelled_stmt -> . repeat_stmt
    (73) unlabelled_stmt -> . while_stmt
    (74) unlabelled_stmt -> . for_stmt
    (75) unlabelled_stmt -> . case_stmt
    (76) unlabelled_stmt -> . goto_stmt
    (77) assign_stmt -> . ID SYM_ASSIGN expression
    (78) assign_stmt -> . ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
    (79) assign_stmt -> . ID SYM_DOT ID SYM_ASSIGN expression
    (80) proc_stmt -> . ID
    (81) proc_stmt -> . ID SYM_LPAREN args_list SYM_RPAREN
    (82) proc_stmt -> . SYS_PROC
    (83) proc_stmt -> . SYS_PROC SYM_LPAREN expression_list SYM_RPAREN
    (84) proc_stmt -> . READ SYM_LPAREN factor SYM_RPAREN
    (63) compound_stmt -> . BEGIN stmt_list END
    (85) if_stmt -> . IF expression THEN stmt else_clause
    (88) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (89) while_stmt -> . WHILE expression DO stmt
    (90) for_stmt -> . FOR ID SYM_ASSIGN expression direction expression DO stmt
    (93) case_stmt -> . CASE expression OF case_expr_list END
    (98) goto_stmt -> . GOTO INT

    INT             shift and go to state 26
    ID              shift and go to state 37
    SYS_PROC        shift and go to state 38
    READ            shift and go to state 39
    BEGIN           shift and go to state 12
    IF              shift and go to state 40
    REPEAT          shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CASE            shift and go to state 44
    GOTO            shift and go to state 45

    stmt                           shift and go to state 251
    unlabelled_stmt                shift and go to state 27
    assign_stmt                    shift and go to state 28
    proc_stmt                      shift and go to state 29
    compound_stmt                  shift and go to state 30
    if_stmt                        shift and go to state 31
    repeat_stmt                    shift and go to state 32
    while_stmt                     shift and go to state 33
    for_stmt                       shift and go to state 34
    case_stmt                      shift and go to state 35
    goto_stmt                      shift and go to state 36

state 227

    (97) case_expr -> ID SYM_COLON . stmt SYM_SEMICOLON
    (66) stmt -> . INT SYM_COLON unlabelled_stmt
    (67) stmt -> . unlabelled_stmt
    (68) unlabelled_stmt -> . assign_stmt
    (69) unlabelled_stmt -> . proc_stmt
    (70) unlabelled_stmt -> . compound_stmt
    (71) unlabelled_stmt -> . if_stmt
    (72) unlabelled_stmt -> . repeat_stmt
    (73) unlabelled_stmt -> . while_stmt
    (74) unlabelled_stmt -> . for_stmt
    (75) unlabelled_stmt -> . case_stmt
    (76) unlabelled_stmt -> . goto_stmt
    (77) assign_stmt -> . ID SYM_ASSIGN expression
    (78) assign_stmt -> . ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
    (79) assign_stmt -> . ID SYM_DOT ID SYM_ASSIGN expression
    (80) proc_stmt -> . ID
    (81) proc_stmt -> . ID SYM_LPAREN args_list SYM_RPAREN
    (82) proc_stmt -> . SYS_PROC
    (83) proc_stmt -> . SYS_PROC SYM_LPAREN expression_list SYM_RPAREN
    (84) proc_stmt -> . READ SYM_LPAREN factor SYM_RPAREN
    (63) compound_stmt -> . BEGIN stmt_list END
    (85) if_stmt -> . IF expression THEN stmt else_clause
    (88) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (89) while_stmt -> . WHILE expression DO stmt
    (90) for_stmt -> . FOR ID SYM_ASSIGN expression direction expression DO stmt
    (93) case_stmt -> . CASE expression OF case_expr_list END
    (98) goto_stmt -> . GOTO INT

    INT             shift and go to state 26
    ID              shift and go to state 37
    SYS_PROC        shift and go to state 38
    READ            shift and go to state 39
    BEGIN           shift and go to state 12
    IF              shift and go to state 40
    REPEAT          shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CASE            shift and go to state 44
    GOTO            shift and go to state 45

    stmt                           shift and go to state 252
    unlabelled_stmt                shift and go to state 27
    assign_stmt                    shift and go to state 28
    proc_stmt                      shift and go to state 29
    compound_stmt                  shift and go to state 30
    if_stmt                        shift and go to state 31
    repeat_stmt                    shift and go to state 32
    while_stmt                     shift and go to state 33
    for_stmt                       shift and go to state 34
    case_stmt                      shift and go to state 35
    goto_stmt                      shift and go to state 36

state 228

    (50) func_decl -> func_head SYM_SEMICOLON sub_routine SYM_SEMICOLON .

    FUNCTION        reduce using rule 50 (func_decl -> func_head SYM_SEMICOLON sub_routine SYM_SEMICOLON .)
    PROCEDURE       reduce using rule 50 (func_decl -> func_head SYM_SEMICOLON sub_routine SYM_SEMICOLON .)
    BEGIN           reduce using rule 50 (func_decl -> func_head SYM_SEMICOLON sub_routine SYM_SEMICOLON .)


state 229

    (4) sub_routine -> routine_head routine_body .

    SYM_SEMICOLON   reduce using rule 4 (sub_routine -> routine_head routine_body .)


state 230

    (52) procedure_decl -> procedure_head SYM_SEMICOLON sub_routine SYM_SEMICOLON .

    FUNCTION        reduce using rule 52 (procedure_decl -> procedure_head SYM_SEMICOLON sub_routine SYM_SEMICOLON .)
    PROCEDURE       reduce using rule 52 (procedure_decl -> procedure_head SYM_SEMICOLON sub_routine SYM_SEMICOLON .)
    BEGIN           reduce using rule 52 (procedure_decl -> procedure_head SYM_SEMICOLON sub_routine SYM_SEMICOLON .)


state 231

    (51) func_head -> FUNCTION ID parameters SYM_COLON . simple_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . ID
    (28) simple_type_decl -> . SYM_LPAREN name_list SYM_RPAREN
    (29) simple_type_decl -> . const_value SYM_RANGE const_value
    (30) simple_type_decl -> . SYM_SUB const_value SYM_RANGE const_value
    (31) simple_type_decl -> . SYM_SUB const_value SYM_RANGE SYM_SUB const_value
    (32) simple_type_decl -> . ID SYM_RANGE ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYS_TYPE        shift and go to state 147
    ID              shift and go to state 142
    SYM_LPAREN      shift and go to state 148
    SYM_SUB         shift and go to state 150
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    simple_type_decl               shift and go to state 253
    const_value                    shift and go to state 149

state 232

    (54) parameters -> SYM_LPAREN para_decl_list . SYM_RPAREN
    (56) para_decl_list -> para_decl_list . SYM_SEMICOLON para_type_list

    SYM_RPAREN      shift and go to state 254
    SYM_SEMICOLON   shift and go to state 255


state 233

    (57) para_decl_list -> para_type_list .

    SYM_RPAREN      reduce using rule 57 (para_decl_list -> para_type_list .)
    SYM_SEMICOLON   reduce using rule 57 (para_decl_list -> para_type_list .)


state 234

    (58) para_type_list -> var_para_list . SYM_COLON simple_type_decl

    SYM_COLON       shift and go to state 256


state 235

    (59) para_type_list -> val_para_list . SYM_COLON simple_type_decl

    SYM_COLON       shift and go to state 257


state 236

    (60) var_para_list -> VAR . name_list
    (38) name_list -> . name_list SYM_COMMA ID
    (39) name_list -> . ID

    ID              shift and go to state 93

    name_list                      shift and go to state 258

state 237

    (61) val_para_list -> name_list .
    (38) name_list -> name_list . SYM_COMMA ID

    SYM_COLON       reduce using rule 61 (val_para_list -> name_list .)
    SYM_COMMA       shift and go to state 141


state 238

    (44) var_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON .

    ID              reduce using rule 44 (var_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON .)
    FUNCTION        reduce using rule 44 (var_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON .)
    PROCEDURE       reduce using rule 44 (var_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON .)
    BEGIN           reduce using rule 44 (var_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON .)


state 239

    (32) simple_type_decl -> ID SYM_RANGE ID .

    SYM_SEMICOLON   reduce using rule 32 (simple_type_decl -> ID SYM_RANGE ID .)
    SYM_RBRAC       reduce using rule 32 (simple_type_decl -> ID SYM_RANGE ID .)
    SYM_RPAREN      reduce using rule 32 (simple_type_decl -> ID SYM_RANGE ID .)


state 240

    (28) simple_type_decl -> SYM_LPAREN name_list SYM_RPAREN .

    SYM_SEMICOLON   reduce using rule 28 (simple_type_decl -> SYM_LPAREN name_list SYM_RPAREN .)
    SYM_RBRAC       reduce using rule 28 (simple_type_decl -> SYM_LPAREN name_list SYM_RPAREN .)
    SYM_RPAREN      reduce using rule 28 (simple_type_decl -> SYM_LPAREN name_list SYM_RPAREN .)


state 241

    (29) simple_type_decl -> const_value SYM_RANGE const_value .

    SYM_SEMICOLON   reduce using rule 29 (simple_type_decl -> const_value SYM_RANGE const_value .)
    SYM_RBRAC       reduce using rule 29 (simple_type_decl -> const_value SYM_RANGE const_value .)
    SYM_RPAREN      reduce using rule 29 (simple_type_decl -> const_value SYM_RANGE const_value .)


state 242

    (30) simple_type_decl -> SYM_SUB const_value SYM_RANGE . const_value
    (31) simple_type_decl -> SYM_SUB const_value SYM_RANGE . SYM_SUB const_value
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYM_SUB         shift and go to state 259
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    const_value                    shift and go to state 260

state 243

    (33) array_type_decl -> ARRAY SYM_LBRAC simple_type_decl . SYM_RBRAC OF type_decl

    SYM_RBRAC       shift and go to state 261


state 244

    (34) record_type_decl -> RECORD field_decl_list END .

    SYM_SEMICOLON   reduce using rule 34 (record_type_decl -> RECORD field_decl_list END .)


state 245

    (35) field_decl_list -> field_decl_list field_decl .

    END             reduce using rule 35 (field_decl_list -> field_decl_list field_decl .)
    ID              reduce using rule 35 (field_decl_list -> field_decl_list field_decl .)


state 246

    (37) field_decl -> name_list SYM_COLON . type_decl SYM_SEMICOLON
    (23) type_decl -> . simple_type_decl
    (24) type_decl -> . array_type_decl
    (25) type_decl -> . record_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . ID
    (28) simple_type_decl -> . SYM_LPAREN name_list SYM_RPAREN
    (29) simple_type_decl -> . const_value SYM_RANGE const_value
    (30) simple_type_decl -> . SYM_SUB const_value SYM_RANGE const_value
    (31) simple_type_decl -> . SYM_SUB const_value SYM_RANGE SYM_SUB const_value
    (32) simple_type_decl -> . ID SYM_RANGE ID
    (33) array_type_decl -> . ARRAY SYM_LBRAC simple_type_decl SYM_RBRAC OF type_decl
    (34) record_type_decl -> . RECORD field_decl_list END
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYS_TYPE        shift and go to state 147
    ID              shift and go to state 142
    SYM_LPAREN      shift and go to state 148
    SYM_SUB         shift and go to state 150
    ARRAY           shift and go to state 151
    RECORD          shift and go to state 152
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    type_decl                      shift and go to state 262
    simple_type_decl               shift and go to state 144
    array_type_decl                shift and go to state 145
    record_type_decl               shift and go to state 146
    const_value                    shift and go to state 149

state 247

    (11) const_expr_list -> const_expr_list ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .

    ID              reduce using rule 11 (const_expr_list -> const_expr_list ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)
    TYPE            reduce using rule 11 (const_expr_list -> const_expr_list ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)
    VAR             reduce using rule 11 (const_expr_list -> const_expr_list ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)
    FUNCTION        reduce using rule 11 (const_expr_list -> const_expr_list ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)
    PROCEDURE       reduce using rule 11 (const_expr_list -> const_expr_list ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)
    BEGIN           reduce using rule 11 (const_expr_list -> const_expr_list ID SYM_EQ SYM_SUB const_value SYM_SEMICOLON .)


state 248

    (78) assign_stmt -> ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression .
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    SYM_SEMICOLON   reduce using rule 78 (assign_stmt -> ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression .)
    ELSE            reduce using rule 78 (assign_stmt -> ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression .)
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 249

    (86) else_clause -> ELSE stmt .

    SYM_SEMICOLON   reduce using rule 86 (else_clause -> ELSE stmt .)
    ELSE            reduce using rule 86 (else_clause -> ELSE stmt .)


state 250

    (90) for_stmt -> FOR ID SYM_ASSIGN expression direction expression . DO stmt
    (101) expression -> expression . SYM_GE expr
    (102) expression -> expression . SYM_GT expr
    (103) expression -> expression . SYM_LE expr
    (104) expression -> expression . SYM_LT expr
    (105) expression -> expression . SYM_EQ expr
    (106) expression -> expression . SYM_NE expr

    DO              shift and go to state 263
    SYM_GE          shift and go to state 109
    SYM_GT          shift and go to state 110
    SYM_LE          shift and go to state 111
    SYM_LT          shift and go to state 112
    SYM_EQ          shift and go to state 113
    SYM_NE          shift and go to state 114


state 251

    (96) case_expr -> const_value SYM_COLON stmt . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 264


state 252

    (97) case_expr -> ID SYM_COLON stmt . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 265


state 253

    (51) func_head -> FUNCTION ID parameters SYM_COLON simple_type_decl .

    SYM_SEMICOLON   reduce using rule 51 (func_head -> FUNCTION ID parameters SYM_COLON simple_type_decl .)


state 254

    (54) parameters -> SYM_LPAREN para_decl_list SYM_RPAREN .

    SYM_COLON       reduce using rule 54 (parameters -> SYM_LPAREN para_decl_list SYM_RPAREN .)
    SYM_SEMICOLON   reduce using rule 54 (parameters -> SYM_LPAREN para_decl_list SYM_RPAREN .)


state 255

    (56) para_decl_list -> para_decl_list SYM_SEMICOLON . para_type_list
    (58) para_type_list -> . var_para_list SYM_COLON simple_type_decl
    (59) para_type_list -> . val_para_list SYM_COLON simple_type_decl
    (60) var_para_list -> . VAR name_list
    (61) val_para_list -> . name_list
    (38) name_list -> . name_list SYM_COMMA ID
    (39) name_list -> . ID

    VAR             shift and go to state 236
    ID              shift and go to state 93

    para_type_list                 shift and go to state 266
    var_para_list                  shift and go to state 234
    val_para_list                  shift and go to state 235
    name_list                      shift and go to state 237

state 256

    (58) para_type_list -> var_para_list SYM_COLON . simple_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . ID
    (28) simple_type_decl -> . SYM_LPAREN name_list SYM_RPAREN
    (29) simple_type_decl -> . const_value SYM_RANGE const_value
    (30) simple_type_decl -> . SYM_SUB const_value SYM_RANGE const_value
    (31) simple_type_decl -> . SYM_SUB const_value SYM_RANGE SYM_SUB const_value
    (32) simple_type_decl -> . ID SYM_RANGE ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYS_TYPE        shift and go to state 147
    ID              shift and go to state 142
    SYM_LPAREN      shift and go to state 148
    SYM_SUB         shift and go to state 150
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    simple_type_decl               shift and go to state 267
    const_value                    shift and go to state 149

state 257

    (59) para_type_list -> val_para_list SYM_COLON . simple_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . ID
    (28) simple_type_decl -> . SYM_LPAREN name_list SYM_RPAREN
    (29) simple_type_decl -> . const_value SYM_RANGE const_value
    (30) simple_type_decl -> . SYM_SUB const_value SYM_RANGE const_value
    (31) simple_type_decl -> . SYM_SUB const_value SYM_RANGE SYM_SUB const_value
    (32) simple_type_decl -> . ID SYM_RANGE ID
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYS_TYPE        shift and go to state 147
    ID              shift and go to state 142
    SYM_LPAREN      shift and go to state 148
    SYM_SUB         shift and go to state 150
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    simple_type_decl               shift and go to state 268
    const_value                    shift and go to state 149

state 258

    (60) var_para_list -> VAR name_list .
    (38) name_list -> name_list . SYM_COMMA ID

    SYM_COLON       reduce using rule 60 (var_para_list -> VAR name_list .)
    SYM_COMMA       shift and go to state 141


state 259

    (31) simple_type_decl -> SYM_SUB const_value SYM_RANGE SYM_SUB . const_value
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    const_value                    shift and go to state 269

state 260

    (30) simple_type_decl -> SYM_SUB const_value SYM_RANGE const_value .

    SYM_SEMICOLON   reduce using rule 30 (simple_type_decl -> SYM_SUB const_value SYM_RANGE const_value .)
    SYM_RBRAC       reduce using rule 30 (simple_type_decl -> SYM_SUB const_value SYM_RANGE const_value .)
    SYM_RPAREN      reduce using rule 30 (simple_type_decl -> SYM_SUB const_value SYM_RANGE const_value .)


state 261

    (33) array_type_decl -> ARRAY SYM_LBRAC simple_type_decl SYM_RBRAC . OF type_decl

    OF              shift and go to state 270


state 262

    (37) field_decl -> name_list SYM_COLON type_decl . SYM_SEMICOLON

    SYM_SEMICOLON   shift and go to state 271


state 263

    (90) for_stmt -> FOR ID SYM_ASSIGN expression direction expression DO . stmt
    (66) stmt -> . INT SYM_COLON unlabelled_stmt
    (67) stmt -> . unlabelled_stmt
    (68) unlabelled_stmt -> . assign_stmt
    (69) unlabelled_stmt -> . proc_stmt
    (70) unlabelled_stmt -> . compound_stmt
    (71) unlabelled_stmt -> . if_stmt
    (72) unlabelled_stmt -> . repeat_stmt
    (73) unlabelled_stmt -> . while_stmt
    (74) unlabelled_stmt -> . for_stmt
    (75) unlabelled_stmt -> . case_stmt
    (76) unlabelled_stmt -> . goto_stmt
    (77) assign_stmt -> . ID SYM_ASSIGN expression
    (78) assign_stmt -> . ID SYM_LBRAC expression SYM_RBRAC SYM_ASSIGN expression
    (79) assign_stmt -> . ID SYM_DOT ID SYM_ASSIGN expression
    (80) proc_stmt -> . ID
    (81) proc_stmt -> . ID SYM_LPAREN args_list SYM_RPAREN
    (82) proc_stmt -> . SYS_PROC
    (83) proc_stmt -> . SYS_PROC SYM_LPAREN expression_list SYM_RPAREN
    (84) proc_stmt -> . READ SYM_LPAREN factor SYM_RPAREN
    (63) compound_stmt -> . BEGIN stmt_list END
    (85) if_stmt -> . IF expression THEN stmt else_clause
    (88) repeat_stmt -> . REPEAT stmt_list UNTIL expression
    (89) while_stmt -> . WHILE expression DO stmt
    (90) for_stmt -> . FOR ID SYM_ASSIGN expression direction expression DO stmt
    (93) case_stmt -> . CASE expression OF case_expr_list END
    (98) goto_stmt -> . GOTO INT

    INT             shift and go to state 26
    ID              shift and go to state 37
    SYS_PROC        shift and go to state 38
    READ            shift and go to state 39
    BEGIN           shift and go to state 12
    IF              shift and go to state 40
    REPEAT          shift and go to state 41
    WHILE           shift and go to state 42
    FOR             shift and go to state 43
    CASE            shift and go to state 44
    GOTO            shift and go to state 45

    stmt                           shift and go to state 272
    unlabelled_stmt                shift and go to state 27
    assign_stmt                    shift and go to state 28
    proc_stmt                      shift and go to state 29
    compound_stmt                  shift and go to state 30
    if_stmt                        shift and go to state 31
    repeat_stmt                    shift and go to state 32
    while_stmt                     shift and go to state 33
    for_stmt                       shift and go to state 34
    case_stmt                      shift and go to state 35
    goto_stmt                      shift and go to state 36

state 264

    (96) case_expr -> const_value SYM_COLON stmt SYM_SEMICOLON .

    END             reduce using rule 96 (case_expr -> const_value SYM_COLON stmt SYM_SEMICOLON .)
    ID              reduce using rule 96 (case_expr -> const_value SYM_COLON stmt SYM_SEMICOLON .)
    INT             reduce using rule 96 (case_expr -> const_value SYM_COLON stmt SYM_SEMICOLON .)
    REAL            reduce using rule 96 (case_expr -> const_value SYM_COLON stmt SYM_SEMICOLON .)
    CHAR            reduce using rule 96 (case_expr -> const_value SYM_COLON stmt SYM_SEMICOLON .)
    STR             reduce using rule 96 (case_expr -> const_value SYM_COLON stmt SYM_SEMICOLON .)
    SYS_CONST       reduce using rule 96 (case_expr -> const_value SYM_COLON stmt SYM_SEMICOLON .)


state 265

    (97) case_expr -> ID SYM_COLON stmt SYM_SEMICOLON .

    END             reduce using rule 97 (case_expr -> ID SYM_COLON stmt SYM_SEMICOLON .)
    ID              reduce using rule 97 (case_expr -> ID SYM_COLON stmt SYM_SEMICOLON .)
    INT             reduce using rule 97 (case_expr -> ID SYM_COLON stmt SYM_SEMICOLON .)
    REAL            reduce using rule 97 (case_expr -> ID SYM_COLON stmt SYM_SEMICOLON .)
    CHAR            reduce using rule 97 (case_expr -> ID SYM_COLON stmt SYM_SEMICOLON .)
    STR             reduce using rule 97 (case_expr -> ID SYM_COLON stmt SYM_SEMICOLON .)
    SYS_CONST       reduce using rule 97 (case_expr -> ID SYM_COLON stmt SYM_SEMICOLON .)


state 266

    (56) para_decl_list -> para_decl_list SYM_SEMICOLON para_type_list .

    SYM_RPAREN      reduce using rule 56 (para_decl_list -> para_decl_list SYM_SEMICOLON para_type_list .)
    SYM_SEMICOLON   reduce using rule 56 (para_decl_list -> para_decl_list SYM_SEMICOLON para_type_list .)


state 267

    (58) para_type_list -> var_para_list SYM_COLON simple_type_decl .

    SYM_RPAREN      reduce using rule 58 (para_type_list -> var_para_list SYM_COLON simple_type_decl .)
    SYM_SEMICOLON   reduce using rule 58 (para_type_list -> var_para_list SYM_COLON simple_type_decl .)


state 268

    (59) para_type_list -> val_para_list SYM_COLON simple_type_decl .

    SYM_RPAREN      reduce using rule 59 (para_type_list -> val_para_list SYM_COLON simple_type_decl .)
    SYM_SEMICOLON   reduce using rule 59 (para_type_list -> val_para_list SYM_COLON simple_type_decl .)


state 269

    (31) simple_type_decl -> SYM_SUB const_value SYM_RANGE SYM_SUB const_value .

    SYM_SEMICOLON   reduce using rule 31 (simple_type_decl -> SYM_SUB const_value SYM_RANGE SYM_SUB const_value .)
    SYM_RBRAC       reduce using rule 31 (simple_type_decl -> SYM_SUB const_value SYM_RANGE SYM_SUB const_value .)
    SYM_RPAREN      reduce using rule 31 (simple_type_decl -> SYM_SUB const_value SYM_RANGE SYM_SUB const_value .)


state 270

    (33) array_type_decl -> ARRAY SYM_LBRAC simple_type_decl SYM_RBRAC OF . type_decl
    (23) type_decl -> . simple_type_decl
    (24) type_decl -> . array_type_decl
    (25) type_decl -> . record_type_decl
    (26) simple_type_decl -> . SYS_TYPE
    (27) simple_type_decl -> . ID
    (28) simple_type_decl -> . SYM_LPAREN name_list SYM_RPAREN
    (29) simple_type_decl -> . const_value SYM_RANGE const_value
    (30) simple_type_decl -> . SYM_SUB const_value SYM_RANGE const_value
    (31) simple_type_decl -> . SYM_SUB const_value SYM_RANGE SYM_SUB const_value
    (32) simple_type_decl -> . ID SYM_RANGE ID
    (33) array_type_decl -> . ARRAY SYM_LBRAC simple_type_decl SYM_RBRAC OF type_decl
    (34) record_type_decl -> . RECORD field_decl_list END
    (13) const_value -> . INT
    (14) const_value -> . REAL
    (15) const_value -> . CHAR
    (16) const_value -> . STR
    (17) const_value -> . SYS_CONST

    SYS_TYPE        shift and go to state 147
    ID              shift and go to state 142
    SYM_LPAREN      shift and go to state 148
    SYM_SUB         shift and go to state 150
    ARRAY           shift and go to state 151
    RECORD          shift and go to state 152
    INT             shift and go to state 72
    REAL            shift and go to state 73
    CHAR            shift and go to state 74
    STR             shift and go to state 75
    SYS_CONST       shift and go to state 76

    simple_type_decl               shift and go to state 144
    type_decl                      shift and go to state 273
    array_type_decl                shift and go to state 145
    record_type_decl               shift and go to state 146
    const_value                    shift and go to state 149

state 271

    (37) field_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON .

    END             reduce using rule 37 (field_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON .)
    ID              reduce using rule 37 (field_decl -> name_list SYM_COLON type_decl SYM_SEMICOLON .)


state 272

    (90) for_stmt -> FOR ID SYM_ASSIGN expression direction expression DO stmt .

    SYM_SEMICOLON   reduce using rule 90 (for_stmt -> FOR ID SYM_ASSIGN expression direction expression DO stmt .)
    ELSE            reduce using rule 90 (for_stmt -> FOR ID SYM_ASSIGN expression direction expression DO stmt .)


state 273

    (33) array_type_decl -> ARRAY SYM_LBRAC simple_type_decl SYM_RBRAC OF type_decl .

    SYM_SEMICOLON   reduce using rule 33 (array_type_decl -> ARRAY SYM_LBRAC simple_type_decl SYM_RBRAC OF type_decl .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNCTION in state 46 resolved as shift
WARNING: shift/reduce conflict for PROCEDURE in state 46 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 164 resolved as shift
